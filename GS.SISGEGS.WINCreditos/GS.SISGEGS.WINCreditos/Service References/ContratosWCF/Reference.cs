//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GS.SISGEGS.WINCreditos.ContratosWCF {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ContratosWCF.IContratosWCF")]
    public interface IContratosWCF {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContratosWCF/ReporteGeneralContratos", ReplyAction="http://tempuri.org/IContratosWCF/ReporteGeneralContratosResponse")]
        GS.SISGEGS.DM.ReporteGeneralContratosResult[] ReporteGeneralContratos(int idAreaResponsable, int idMateria, int idTipo, int idProveedor, int idEstado, System.DateTime fechaInicio, System.DateTime fechaFin, System.DateTime fechaVencIni, System.DateTime fechaVencFin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContratosWCF/ReporteGeneralContratos", ReplyAction="http://tempuri.org/IContratosWCF/ReporteGeneralContratosResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.ReporteGeneralContratosResult[]> ReporteGeneralContratosAsync(int idAreaResponsable, int idMateria, int idTipo, int idProveedor, int idEstado, System.DateTime fechaInicio, System.DateTime fechaFin, System.DateTime fechaVencIni, System.DateTime fechaVencFin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContratosWCF/ContratosVencer_Listar", ReplyAction="http://tempuri.org/IContratosWCF/ContratosVencer_ListarResponse")]
        GS.SISGEGS.DM.ContratosVencer_ListarResult[] ContratosVencer_Listar(int id_Area);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContratosWCF/ContratosVencer_Listar", ReplyAction="http://tempuri.org/IContratosWCF/ContratosVencer_ListarResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.ContratosVencer_ListarResult[]> ContratosVencer_ListarAsync(int id_Area);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContratosWCF/AreaResponsable_Listar", ReplyAction="http://tempuri.org/IContratosWCF/AreaResponsable_ListarResponse")]
        GS.SISGEGS.DM.AreaResponsable_ListarResult[] AreaResponsable_Listar();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContratosWCF/AreaResponsable_Listar", ReplyAction="http://tempuri.org/IContratosWCF/AreaResponsable_ListarResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.AreaResponsable_ListarResult[]> AreaResponsable_ListarAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContratosWCF/ProveedorContrato_Listar", ReplyAction="http://tempuri.org/IContratosWCF/ProveedorContrato_ListarResponse")]
        GS.SISGEGS.DM.ProveedorContrato_ListarResult[] ProveedorContrato_Listar();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContratosWCF/ProveedorContrato_Listar", ReplyAction="http://tempuri.org/IContratosWCF/ProveedorContrato_ListarResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.ProveedorContrato_ListarResult[]> ProveedorContrato_ListarAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContratosWCF/Contrato_Registrar", ReplyAction="http://tempuri.org/IContratosWCF/Contrato_RegistrarResponse")]
        void Contrato_Registrar(int Codigo, int materia, int tipo, int areaResponsable, string renovar, int proveedor, string contratante, string fechaSuscripcion, string fechaVencimiento, string objeto, string renovacion, string monto, int estado, int idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContratosWCF/Contrato_Registrar", ReplyAction="http://tempuri.org/IContratosWCF/Contrato_RegistrarResponse")]
        System.Threading.Tasks.Task Contrato_RegistrarAsync(int Codigo, int materia, int tipo, int areaResponsable, string renovar, int proveedor, string contratante, string fechaSuscripcion, string fechaVencimiento, string objeto, string renovacion, string monto, int estado, int idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContratosWCF/Contrato_Eliminar", ReplyAction="http://tempuri.org/IContratosWCF/Contrato_EliminarResponse")]
        void Contrato_Eliminar(int idContrato, int idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContratosWCF/Contrato_Eliminar", ReplyAction="http://tempuri.org/IContratosWCF/Contrato_EliminarResponse")]
        System.Threading.Tasks.Task Contrato_EliminarAsync(int idContrato, int idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContratosWCF/Contrato_Obtener", ReplyAction="http://tempuri.org/IContratosWCF/Contrato_ObtenerResponse")]
        GS.SISGEGS.DM.Contrato_ObtenerResult Contrato_Obtener(int idContrato);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContratosWCF/Contrato_Obtener", ReplyAction="http://tempuri.org/IContratosWCF/Contrato_ObtenerResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.Contrato_ObtenerResult> Contrato_ObtenerAsync(int idContrato);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContratosWCF/Contrato_Actualizar", ReplyAction="http://tempuri.org/IContratosWCF/Contrato_ActualizarResponse")]
        void Contrato_Actualizar(int idContrato, int Codigo, int materia, int tipo, int areaResponsable, string renovar, int proveedor, string contratante, string fechaSuscripcion, string fechaVencimiento, string objeto, string renovacion, string monto, int estado, int idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContratosWCF/Contrato_Actualizar", ReplyAction="http://tempuri.org/IContratosWCF/Contrato_ActualizarResponse")]
        System.Threading.Tasks.Task Contrato_ActualizarAsync(int idContrato, int Codigo, int materia, int tipo, int areaResponsable, string renovar, int proveedor, string contratante, string fechaSuscripcion, string fechaVencimiento, string objeto, string renovacion, string monto, int estado, int idUsuario);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IContratosWCFChannel : GS.SISGEGS.WINCreditos.ContratosWCF.IContratosWCF, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ContratosWCFClient : System.ServiceModel.ClientBase<GS.SISGEGS.WINCreditos.ContratosWCF.IContratosWCF>, GS.SISGEGS.WINCreditos.ContratosWCF.IContratosWCF {
        
        public ContratosWCFClient() {
        }
        
        public ContratosWCFClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ContratosWCFClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContratosWCFClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContratosWCFClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public GS.SISGEGS.DM.ReporteGeneralContratosResult[] ReporteGeneralContratos(int idAreaResponsable, int idMateria, int idTipo, int idProveedor, int idEstado, System.DateTime fechaInicio, System.DateTime fechaFin, System.DateTime fechaVencIni, System.DateTime fechaVencFin) {
            return base.Channel.ReporteGeneralContratos(idAreaResponsable, idMateria, idTipo, idProveedor, idEstado, fechaInicio, fechaFin, fechaVencIni, fechaVencFin);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.ReporteGeneralContratosResult[]> ReporteGeneralContratosAsync(int idAreaResponsable, int idMateria, int idTipo, int idProveedor, int idEstado, System.DateTime fechaInicio, System.DateTime fechaFin, System.DateTime fechaVencIni, System.DateTime fechaVencFin) {
            return base.Channel.ReporteGeneralContratosAsync(idAreaResponsable, idMateria, idTipo, idProveedor, idEstado, fechaInicio, fechaFin, fechaVencIni, fechaVencFin);
        }
        
        public GS.SISGEGS.DM.ContratosVencer_ListarResult[] ContratosVencer_Listar(int id_Area) {
            return base.Channel.ContratosVencer_Listar(id_Area);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.ContratosVencer_ListarResult[]> ContratosVencer_ListarAsync(int id_Area) {
            return base.Channel.ContratosVencer_ListarAsync(id_Area);
        }
        
        public GS.SISGEGS.DM.AreaResponsable_ListarResult[] AreaResponsable_Listar() {
            return base.Channel.AreaResponsable_Listar();
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.AreaResponsable_ListarResult[]> AreaResponsable_ListarAsync() {
            return base.Channel.AreaResponsable_ListarAsync();
        }
        
        public GS.SISGEGS.DM.ProveedorContrato_ListarResult[] ProveedorContrato_Listar() {
            return base.Channel.ProveedorContrato_Listar();
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.ProveedorContrato_ListarResult[]> ProveedorContrato_ListarAsync() {
            return base.Channel.ProveedorContrato_ListarAsync();
        }
        
        public void Contrato_Registrar(int Codigo, int materia, int tipo, int areaResponsable, string renovar, int proveedor, string contratante, string fechaSuscripcion, string fechaVencimiento, string objeto, string renovacion, string monto, int estado, int idUsuario) {
            base.Channel.Contrato_Registrar(Codigo, materia, tipo, areaResponsable, renovar, proveedor, contratante, fechaSuscripcion, fechaVencimiento, objeto, renovacion, monto, estado, idUsuario);
        }
        
        public System.Threading.Tasks.Task Contrato_RegistrarAsync(int Codigo, int materia, int tipo, int areaResponsable, string renovar, int proveedor, string contratante, string fechaSuscripcion, string fechaVencimiento, string objeto, string renovacion, string monto, int estado, int idUsuario) {
            return base.Channel.Contrato_RegistrarAsync(Codigo, materia, tipo, areaResponsable, renovar, proveedor, contratante, fechaSuscripcion, fechaVencimiento, objeto, renovacion, monto, estado, idUsuario);
        }
        
        public void Contrato_Eliminar(int idContrato, int idUsuario) {
            base.Channel.Contrato_Eliminar(idContrato, idUsuario);
        }
        
        public System.Threading.Tasks.Task Contrato_EliminarAsync(int idContrato, int idUsuario) {
            return base.Channel.Contrato_EliminarAsync(idContrato, idUsuario);
        }
        
        public GS.SISGEGS.DM.Contrato_ObtenerResult Contrato_Obtener(int idContrato) {
            return base.Channel.Contrato_Obtener(idContrato);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.Contrato_ObtenerResult> Contrato_ObtenerAsync(int idContrato) {
            return base.Channel.Contrato_ObtenerAsync(idContrato);
        }
        
        public void Contrato_Actualizar(int idContrato, int Codigo, int materia, int tipo, int areaResponsable, string renovar, int proveedor, string contratante, string fechaSuscripcion, string fechaVencimiento, string objeto, string renovacion, string monto, int estado, int idUsuario) {
            base.Channel.Contrato_Actualizar(idContrato, Codigo, materia, tipo, areaResponsable, renovar, proveedor, contratante, fechaSuscripcion, fechaVencimiento, objeto, renovacion, monto, estado, idUsuario);
        }
        
        public System.Threading.Tasks.Task Contrato_ActualizarAsync(int idContrato, int Codigo, int materia, int tipo, int areaResponsable, string renovar, int proveedor, string contratante, string fechaSuscripcion, string fechaVencimiento, string objeto, string renovacion, string monto, int estado, int idUsuario) {
            return base.Channel.Contrato_ActualizarAsync(idContrato, Codigo, materia, tipo, areaResponsable, renovar, proveedor, contratante, fechaSuscripcion, fechaVencimiento, objeto, renovacion, monto, estado, idUsuario);
        }
    }
}
