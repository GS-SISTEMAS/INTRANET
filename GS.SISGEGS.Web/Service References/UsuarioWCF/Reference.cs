//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GS.SISGEGS.Web.UsuarioWCF {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UsuarioWCF.IUsuarioWCF")]
    public interface IUsuarioWCF {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuarioWCF/Usuario_Buscar", ReplyAction="http://tempuri.org/IUsuarioWCF/Usuario_BuscarResponse")]
        GS.SISGEGS.DM.Usuario_BuscarResult[] Usuario_Buscar(int idEmpresa, int idPerfil, string Descripcion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuarioWCF/Usuario_Buscar", ReplyAction="http://tempuri.org/IUsuarioWCF/Usuario_BuscarResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.Usuario_BuscarResult[]> Usuario_BuscarAsync(int idEmpresa, int idPerfil, string Descripcion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuarioWCF/Usuario_BuscarGenesys", ReplyAction="http://tempuri.org/IUsuarioWCF/Usuario_BuscarGenesysResponse")]
        GS.SISGEGS.DM.gsUsuario_BuscarResult[] Usuario_BuscarGenesys(int idEmpresa, int codigoUsuario, int idUsuario, string descripcion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuarioWCF/Usuario_BuscarGenesys", ReplyAction="http://tempuri.org/IUsuarioWCF/Usuario_BuscarGenesysResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.gsUsuario_BuscarResult[]> Usuario_BuscarGenesysAsync(int idEmpresa, int codigoUsuario, int idUsuario, string descripcion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuarioWCF/Usuario_Registrar", ReplyAction="http://tempuri.org/IUsuarioWCF/Usuario_RegistrarResponse")]
        int Usuario_Registrar(int idEmpresa, int codigoUsuario, string password, string nombreUsuario, string LoginUsuario, int idPerfil, string correo, string nroDocumento, bool cambioPassword, bool cambioPasswordAmbos, int idUsuarioRegistro, bool activo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuarioWCF/Usuario_Registrar", ReplyAction="http://tempuri.org/IUsuarioWCF/Usuario_RegistrarResponse")]
        System.Threading.Tasks.Task<int> Usuario_RegistrarAsync(int idEmpresa, int codigoUsuario, string password, string nombreUsuario, string LoginUsuario, int idPerfil, string correo, string nroDocumento, bool cambioPassword, bool cambioPasswordAmbos, int idUsuarioRegistro, bool activo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuarioWCF/Usuario_Actualizar", ReplyAction="http://tempuri.org/IUsuarioWCF/Usuario_ActualizarResponse")]
        int Usuario_Actualizar(int idEmpresa, int idUsuario, int codigoUsuario, string password, string nombreUsuario, string LoginUsuario, int idPerfil, string correo, string nroDocumento, bool cambioPassword, bool cambioAmbos, int idUsuarioRegistro, bool activo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuarioWCF/Usuario_Actualizar", ReplyAction="http://tempuri.org/IUsuarioWCF/Usuario_ActualizarResponse")]
        System.Threading.Tasks.Task<int> Usuario_ActualizarAsync(int idEmpresa, int idUsuario, int codigoUsuario, string password, string nombreUsuario, string LoginUsuario, int idPerfil, string correo, string nroDocumento, bool cambioPassword, bool cambioAmbos, int idUsuarioRegistro, bool activo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuarioWCF/Usuario_CambiarContrasena", ReplyAction="http://tempuri.org/IUsuarioWCF/Usuario_CambiarContrasenaResponse")]
        void Usuario_CambiarContrasena(int idEmpresa, int idUsuario, int codigoUsuario, string password, bool cambiarAmbos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuarioWCF/Usuario_CambiarContrasena", ReplyAction="http://tempuri.org/IUsuarioWCF/Usuario_CambiarContrasenaResponse")]
        System.Threading.Tasks.Task Usuario_CambiarContrasenaAsync(int idEmpresa, int idUsuario, int codigoUsuario, string password, bool cambiarAmbos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuarioWCF/Usuario_ListarMenusPorUsuario", ReplyAction="http://tempuri.org/IUsuarioWCF/Usuario_ListarMenusPorUsuarioResponse")]
        GS.SISGEGS.DM.usp_SelCantidadAccesosPorMenuResult[] Usuario_ListarMenusPorUsuario(int idempresa, System.DateTime fechainicio, System.DateTime fechafin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuarioWCF/Usuario_ListarMenusPorUsuario", ReplyAction="http://tempuri.org/IUsuarioWCF/Usuario_ListarMenusPorUsuarioResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.usp_SelCantidadAccesosPorMenuResult[]> Usuario_ListarMenusPorUsuarioAsync(int idempresa, System.DateTime fechainicio, System.DateTime fechafin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuarioWCF/Usuario_ListarMenusNoAccedidos", ReplyAction="http://tempuri.org/IUsuarioWCF/Usuario_ListarMenusNoAccedidosResponse")]
        GS.SISGEGS.DM.usp_Sel_MenusNoAccedidosResult[] Usuario_ListarMenusNoAccedidos(int idempresa, System.DateTime fechainicio, System.DateTime fechafin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuarioWCF/Usuario_ListarMenusNoAccedidos", ReplyAction="http://tempuri.org/IUsuarioWCF/Usuario_ListarMenusNoAccedidosResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.usp_Sel_MenusNoAccedidosResult[]> Usuario_ListarMenusNoAccedidosAsync(int idempresa, System.DateTime fechainicio, System.DateTime fechafin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuarioWCF/Usuario_Listar_Usuarios", ReplyAction="http://tempuri.org/IUsuarioWCF/Usuario_Listar_UsuariosResponse")]
        GS.SISGEGS.DM.USP_Sel_Usuarios_GeneralResult[] Usuario_Listar_Usuarios(string loginUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuarioWCF/Usuario_Listar_Usuarios", ReplyAction="http://tempuri.org/IUsuarioWCF/Usuario_Listar_UsuariosResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.USP_Sel_Usuarios_GeneralResult[]> Usuario_Listar_UsuariosAsync(string loginUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuarioWCF/Actualizar_Estado_Usuarios_General", ReplyAction="http://tempuri.org/IUsuarioWCF/Actualizar_Estado_Usuarios_GeneralResponse")]
        int Actualizar_Estado_Usuarios_General(string loginUsuario, bool Estado_General);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuarioWCF/Actualizar_Estado_Usuarios_General", ReplyAction="http://tempuri.org/IUsuarioWCF/Actualizar_Estado_Usuarios_GeneralResponse")]
        System.Threading.Tasks.Task<int> Actualizar_Estado_Usuarios_GeneralAsync(string loginUsuario, bool Estado_General);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuarioWCF/Actualizar_Estado_Usuarios_Empresa", ReplyAction="http://tempuri.org/IUsuarioWCF/Actualizar_Estado_Usuarios_EmpresaResponse")]
        int Actualizar_Estado_Usuarios_Empresa(string loginUsuario, bool Estado_Silvestre, bool Estado_NeoAgrum, bool Estado_Inatec, bool Estado_Intranet, bool Estado_Ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuarioWCF/Actualizar_Estado_Usuarios_Empresa", ReplyAction="http://tempuri.org/IUsuarioWCF/Actualizar_Estado_Usuarios_EmpresaResponse")]
        System.Threading.Tasks.Task<int> Actualizar_Estado_Usuarios_EmpresaAsync(string loginUsuario, bool Estado_Silvestre, bool Estado_NeoAgrum, bool Estado_Inatec, bool Estado_Intranet, bool Estado_Ticket);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUsuarioWCFChannel : GS.SISGEGS.Web.UsuarioWCF.IUsuarioWCF, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UsuarioWCFClient : System.ServiceModel.ClientBase<GS.SISGEGS.Web.UsuarioWCF.IUsuarioWCF>, GS.SISGEGS.Web.UsuarioWCF.IUsuarioWCF {
        
        public UsuarioWCFClient() {
        }
        
        public UsuarioWCFClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UsuarioWCFClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UsuarioWCFClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UsuarioWCFClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public GS.SISGEGS.DM.Usuario_BuscarResult[] Usuario_Buscar(int idEmpresa, int idPerfil, string Descripcion) {
            return base.Channel.Usuario_Buscar(idEmpresa, idPerfil, Descripcion);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.Usuario_BuscarResult[]> Usuario_BuscarAsync(int idEmpresa, int idPerfil, string Descripcion) {
            return base.Channel.Usuario_BuscarAsync(idEmpresa, idPerfil, Descripcion);
        }
        
        public GS.SISGEGS.DM.gsUsuario_BuscarResult[] Usuario_BuscarGenesys(int idEmpresa, int codigoUsuario, int idUsuario, string descripcion) {
            return base.Channel.Usuario_BuscarGenesys(idEmpresa, codigoUsuario, idUsuario, descripcion);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.gsUsuario_BuscarResult[]> Usuario_BuscarGenesysAsync(int idEmpresa, int codigoUsuario, int idUsuario, string descripcion) {
            return base.Channel.Usuario_BuscarGenesysAsync(idEmpresa, codigoUsuario, idUsuario, descripcion);
        }
        
        public int Usuario_Registrar(int idEmpresa, int codigoUsuario, string password, string nombreUsuario, string LoginUsuario, int idPerfil, string correo, string nroDocumento, bool cambioPassword, bool cambioPasswordAmbos, int idUsuarioRegistro, bool activo) {
            return base.Channel.Usuario_Registrar(idEmpresa, codigoUsuario, password, nombreUsuario, LoginUsuario, idPerfil, correo, nroDocumento, cambioPassword, cambioPasswordAmbos, idUsuarioRegistro, activo);
        }
        
        public System.Threading.Tasks.Task<int> Usuario_RegistrarAsync(int idEmpresa, int codigoUsuario, string password, string nombreUsuario, string LoginUsuario, int idPerfil, string correo, string nroDocumento, bool cambioPassword, bool cambioPasswordAmbos, int idUsuarioRegistro, bool activo) {
            return base.Channel.Usuario_RegistrarAsync(idEmpresa, codigoUsuario, password, nombreUsuario, LoginUsuario, idPerfil, correo, nroDocumento, cambioPassword, cambioPasswordAmbos, idUsuarioRegistro, activo);
        }
        
        public int Usuario_Actualizar(int idEmpresa, int idUsuario, int codigoUsuario, string password, string nombreUsuario, string LoginUsuario, int idPerfil, string correo, string nroDocumento, bool cambioPassword, bool cambioAmbos, int idUsuarioRegistro, bool activo) {
            return base.Channel.Usuario_Actualizar(idEmpresa, idUsuario, codigoUsuario, password, nombreUsuario, LoginUsuario, idPerfil, correo, nroDocumento, cambioPassword, cambioAmbos, idUsuarioRegistro, activo);
        }
        
        public System.Threading.Tasks.Task<int> Usuario_ActualizarAsync(int idEmpresa, int idUsuario, int codigoUsuario, string password, string nombreUsuario, string LoginUsuario, int idPerfil, string correo, string nroDocumento, bool cambioPassword, bool cambioAmbos, int idUsuarioRegistro, bool activo) {
            return base.Channel.Usuario_ActualizarAsync(idEmpresa, idUsuario, codigoUsuario, password, nombreUsuario, LoginUsuario, idPerfil, correo, nroDocumento, cambioPassword, cambioAmbos, idUsuarioRegistro, activo);
        }
        
        public void Usuario_CambiarContrasena(int idEmpresa, int idUsuario, int codigoUsuario, string password, bool cambiarAmbos) {
            base.Channel.Usuario_CambiarContrasena(idEmpresa, idUsuario, codigoUsuario, password, cambiarAmbos);
        }
        
        public System.Threading.Tasks.Task Usuario_CambiarContrasenaAsync(int idEmpresa, int idUsuario, int codigoUsuario, string password, bool cambiarAmbos) {
            return base.Channel.Usuario_CambiarContrasenaAsync(idEmpresa, idUsuario, codigoUsuario, password, cambiarAmbos);
        }
        
        public GS.SISGEGS.DM.usp_SelCantidadAccesosPorMenuResult[] Usuario_ListarMenusPorUsuario(int idempresa, System.DateTime fechainicio, System.DateTime fechafin) {
            return base.Channel.Usuario_ListarMenusPorUsuario(idempresa, fechainicio, fechafin);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.usp_SelCantidadAccesosPorMenuResult[]> Usuario_ListarMenusPorUsuarioAsync(int idempresa, System.DateTime fechainicio, System.DateTime fechafin) {
            return base.Channel.Usuario_ListarMenusPorUsuarioAsync(idempresa, fechainicio, fechafin);
        }
        
        public GS.SISGEGS.DM.usp_Sel_MenusNoAccedidosResult[] Usuario_ListarMenusNoAccedidos(int idempresa, System.DateTime fechainicio, System.DateTime fechafin) {
            return base.Channel.Usuario_ListarMenusNoAccedidos(idempresa, fechainicio, fechafin);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.usp_Sel_MenusNoAccedidosResult[]> Usuario_ListarMenusNoAccedidosAsync(int idempresa, System.DateTime fechainicio, System.DateTime fechafin) {
            return base.Channel.Usuario_ListarMenusNoAccedidosAsync(idempresa, fechainicio, fechafin);
        }
        
        public GS.SISGEGS.DM.USP_Sel_Usuarios_GeneralResult[] Usuario_Listar_Usuarios(string loginUsuario) {
            return base.Channel.Usuario_Listar_Usuarios(loginUsuario);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.USP_Sel_Usuarios_GeneralResult[]> Usuario_Listar_UsuariosAsync(string loginUsuario) {
            return base.Channel.Usuario_Listar_UsuariosAsync(loginUsuario);
        }
        
        public int Actualizar_Estado_Usuarios_General(string loginUsuario, bool Estado_General) {
            return base.Channel.Actualizar_Estado_Usuarios_General(loginUsuario, Estado_General);
        }
        
        public System.Threading.Tasks.Task<int> Actualizar_Estado_Usuarios_GeneralAsync(string loginUsuario, bool Estado_General) {
            return base.Channel.Actualizar_Estado_Usuarios_GeneralAsync(loginUsuario, Estado_General);
        }
        
        public int Actualizar_Estado_Usuarios_Empresa(string loginUsuario, bool Estado_Silvestre, bool Estado_NeoAgrum, bool Estado_Inatec, bool Estado_Intranet, bool Estado_Ticket) {
            return base.Channel.Actualizar_Estado_Usuarios_Empresa(loginUsuario, Estado_Silvestre, Estado_NeoAgrum, Estado_Inatec, Estado_Intranet, Estado_Ticket);
        }
        
        public System.Threading.Tasks.Task<int> Actualizar_Estado_Usuarios_EmpresaAsync(string loginUsuario, bool Estado_Silvestre, bool Estado_NeoAgrum, bool Estado_Inatec, bool Estado_Intranet, bool Estado_Ticket) {
            return base.Channel.Actualizar_Estado_Usuarios_EmpresaAsync(loginUsuario, Estado_Silvestre, Estado_NeoAgrum, Estado_Inatec, Estado_Intranet, Estado_Ticket);
        }
    }
}
