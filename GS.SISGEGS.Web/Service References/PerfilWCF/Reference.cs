//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GS.SISGEGS.Web.PerfilWCF {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PerfilWCF.IPerfilWCF")]
    public interface IPerfilWCF {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPerfilWCF/Perfil_Listar", ReplyAction="http://tempuri.org/IPerfilWCF/Perfil_ListarResponse")]
        GS.SISGEGS.DM.Perfil_ListarResult[] Perfil_Listar(int idEmpresa, string descripcion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPerfilWCF/Perfil_Listar", ReplyAction="http://tempuri.org/IPerfilWCF/Perfil_ListarResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.Perfil_ListarResult[]> Perfil_ListarAsync(int idEmpresa, string descripcion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPerfilWCF/Perfil_Buscar", ReplyAction="http://tempuri.org/IPerfilWCF/Perfil_BuscarResponse")]
        GS.SISGEGS.DM.Perfil_BuscarResult Perfil_Buscar(int idPerfil);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPerfilWCF/Perfil_Buscar", ReplyAction="http://tempuri.org/IPerfilWCF/Perfil_BuscarResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.Perfil_BuscarResult> Perfil_BuscarAsync(int idPerfil);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPerfilWCF/Perfil_Eliminar", ReplyAction="http://tempuri.org/IPerfilWCF/Perfil_EliminarResponse")]
        void Perfil_Eliminar(int idPerfil, int idUsuarioModificar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPerfilWCF/Perfil_Eliminar", ReplyAction="http://tempuri.org/IPerfilWCF/Perfil_EliminarResponse")]
        System.Threading.Tasks.Task Perfil_EliminarAsync(int idPerfil, int idUsuarioModificar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPerfilWCF/Perfil_Registrar", ReplyAction="http://tempuri.org/IPerfilWCF/Perfil_RegistrarResponse")]
        void Perfil_Registrar(int idPerfil, string nombrePerfil, int idEmpresa, int idUsuarioRegistro, bool activo, bool aprobarPlanilla0, bool aprobarPlanilla1, bool modificarPedido);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPerfilWCF/Perfil_Registrar", ReplyAction="http://tempuri.org/IPerfilWCF/Perfil_RegistrarResponse")]
        System.Threading.Tasks.Task Perfil_RegistrarAsync(int idPerfil, string nombrePerfil, int idEmpresa, int idUsuarioRegistro, bool activo, bool aprobarPlanilla0, bool aprobarPlanilla1, bool modificarPedido);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPerfilWCFChannel : GS.SISGEGS.Web.PerfilWCF.IPerfilWCF, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PerfilWCFClient : System.ServiceModel.ClientBase<GS.SISGEGS.Web.PerfilWCF.IPerfilWCF>, GS.SISGEGS.Web.PerfilWCF.IPerfilWCF {
        
        public PerfilWCFClient() {
        }
        
        public PerfilWCFClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PerfilWCFClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PerfilWCFClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PerfilWCFClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public GS.SISGEGS.DM.Perfil_ListarResult[] Perfil_Listar(int idEmpresa, string descripcion) {
            return base.Channel.Perfil_Listar(idEmpresa, descripcion);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.Perfil_ListarResult[]> Perfil_ListarAsync(int idEmpresa, string descripcion) {
            return base.Channel.Perfil_ListarAsync(idEmpresa, descripcion);
        }
        
        public GS.SISGEGS.DM.Perfil_BuscarResult Perfil_Buscar(int idPerfil) {
            return base.Channel.Perfil_Buscar(idPerfil);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.Perfil_BuscarResult> Perfil_BuscarAsync(int idPerfil) {
            return base.Channel.Perfil_BuscarAsync(idPerfil);
        }
        
        public void Perfil_Eliminar(int idPerfil, int idUsuarioModificar) {
            base.Channel.Perfil_Eliminar(idPerfil, idUsuarioModificar);
        }
        
        public System.Threading.Tasks.Task Perfil_EliminarAsync(int idPerfil, int idUsuarioModificar) {
            return base.Channel.Perfil_EliminarAsync(idPerfil, idUsuarioModificar);
        }
        
        public void Perfil_Registrar(int idPerfil, string nombrePerfil, int idEmpresa, int idUsuarioRegistro, bool activo, bool aprobarPlanilla0, bool aprobarPlanilla1, bool modificarPedido) {
            base.Channel.Perfil_Registrar(idPerfil, nombrePerfil, idEmpresa, idUsuarioRegistro, activo, aprobarPlanilla0, aprobarPlanilla1, modificarPedido);
        }
        
        public System.Threading.Tasks.Task Perfil_RegistrarAsync(int idPerfil, string nombrePerfil, int idEmpresa, int idUsuarioRegistro, bool activo, bool aprobarPlanilla0, bool aprobarPlanilla1, bool modificarPedido) {
            return base.Channel.Perfil_RegistrarAsync(idPerfil, nombrePerfil, idEmpresa, idUsuarioRegistro, activo, aprobarPlanilla0, aprobarPlanilla1, modificarPedido);
        }
    }
}
