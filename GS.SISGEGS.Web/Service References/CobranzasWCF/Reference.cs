//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GS.SISGEGS.Web.CobranzasWCF {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CobranzasWCF.ICobranzasWCF")]
    public interface ICobranzasWCF {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Reporte_Cancelaciones", ReplyAction="http://tempuri.org/ICobranzasWCF/Reporte_CancelacionesResponse")]
        GS.SISGEGS.DM.gsReporteCanceladosWebResult[] Reporte_Cancelaciones(int idEmpresa, int codigoUsuario, string codAgenda, string codVendedor, System.DateTime fechaInicial, System.DateTime fechaFinal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Reporte_Cancelaciones", ReplyAction="http://tempuri.org/ICobranzasWCF/Reporte_CancelacionesResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.gsReporteCanceladosWebResult[]> Reporte_CancelacionesAsync(int idEmpresa, int codigoUsuario, string codAgenda, string codVendedor, System.DateTime fechaInicial, System.DateTime fechaFinal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Reporte_VentasCliente", ReplyAction="http://tempuri.org/ICobranzasWCF/Reporte_VentasClienteResponse")]
        GS.SISGEGS.DM.gsDocVenta_ReporteVenta_ClienteResult[] Reporte_VentasCliente(int idEmpresa, int codigoUsuario, string codAgenda, string codigoVendedor, System.DateTime fechaInicial, System.DateTime fechaFinal, string ESTADO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Reporte_VentasCliente", ReplyAction="http://tempuri.org/ICobranzasWCF/Reporte_VentasClienteResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.gsDocVenta_ReporteVenta_ClienteResult[]> Reporte_VentasClienteAsync(int idEmpresa, int codigoUsuario, string codAgenda, string codigoVendedor, System.DateTime fechaInicial, System.DateTime fechaFinal, string ESTADO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Reporte_VentasClienteResumen", ReplyAction="http://tempuri.org/ICobranzasWCF/Reporte_VentasClienteResumenResponse")]
        GS.SISGEGS.DM.gsDocVenta_ReporteVenta_ClienteResumenResult[] Reporte_VentasClienteResumen(int idEmpresa, int codigoUsuario, string codAgenda, string codigoVendedor, System.DateTime fechaInicial, System.DateTime fechaFinal, int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Reporte_VentasClienteResumen", ReplyAction="http://tempuri.org/ICobranzasWCF/Reporte_VentasClienteResumenResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.gsDocVenta_ReporteVenta_ClienteResumenResult[]> Reporte_VentasClienteResumenAsync(int idEmpresa, int codigoUsuario, string codAgenda, string codigoVendedor, System.DateTime fechaInicial, System.DateTime fechaFinal, int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Reporte_CancelacionesResumen", ReplyAction="http://tempuri.org/ICobranzasWCF/Reporte_CancelacionesResumenResponse")]
        GS.SISGEGS.DM.gsReporteCanceladosWebResumenResult[] Reporte_CancelacionesResumen(int idEmpresa, int codigoUsuario, string codAgenda, string codigoVendedor, int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Reporte_CancelacionesResumen", ReplyAction="http://tempuri.org/ICobranzasWCF/Reporte_CancelacionesResumenResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.gsReporteCanceladosWebResumenResult[]> Reporte_CancelacionesResumenAsync(int idEmpresa, int codigoUsuario, string codAgenda, string codigoVendedor, int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Reporte_CancelacionesResumenVendedor", ReplyAction="http://tempuri.org/ICobranzasWCF/Reporte_CancelacionesResumenVendedorResponse")]
        GS.SISGEGS.DM.gsReporteCanceladosWebResumenVendedorResult[] Reporte_CancelacionesResumenVendedor(int idEmpresa, int codigoUsuario, string codAgenda, string codigoVendedor, System.DateTime fechaInicial, System.DateTime fechaFinal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Reporte_CancelacionesResumenVendedor", ReplyAction="http://tempuri.org/ICobranzasWCF/Reporte_CancelacionesResumenVendedorResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.gsReporteCanceladosWebResumenVendedorResult[]> Reporte_CancelacionesResumenVendedorAsync(int idEmpresa, int codigoUsuario, string codAgenda, string codigoVendedor, System.DateTime fechaInicial, System.DateTime fechaFinal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Reporte_CancelacionesResumenActual", ReplyAction="http://tempuri.org/ICobranzasWCF/Reporte_CancelacionesResumenActualResponse")]
        GS.SISGEGS.DM.gsReporteCanceladosResumenMes_actualResult[] Reporte_CancelacionesResumenActual(int idEmpresa, int codigoUsuario, string codAgenda, string codigoVendedor, int year, int mes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Reporte_CancelacionesResumenActual", ReplyAction="http://tempuri.org/ICobranzasWCF/Reporte_CancelacionesResumenActualResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.gsReporteCanceladosResumenMes_actualResult[]> Reporte_CancelacionesResumenActualAsync(int idEmpresa, int codigoUsuario, string codAgenda, string codigoVendedor, int year, int mes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Reporte_CancelacionesResumenDetalleMes", ReplyAction="http://tempuri.org/ICobranzasWCF/Reporte_CancelacionesResumenDetalleMesResponse")]
        GS.SISGEGS.DM.gsReporteCobranzaWeb_DetalleMesResult[] Reporte_CancelacionesResumenDetalleMes(int idEmpresa, int codigoUsuario, string codAgenda, string codigoVendedor, int year, int mes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Reporte_CancelacionesResumenDetalleMes", ReplyAction="http://tempuri.org/ICobranzasWCF/Reporte_CancelacionesResumenDetalleMesResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.gsReporteCobranzaWeb_DetalleMesResult[]> Reporte_CancelacionesResumenDetalleMesAsync(int idEmpresa, int codigoUsuario, string codAgenda, string codigoVendedor, int year, int mes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Reporte_CancelacionesResumenActual_v2", ReplyAction="http://tempuri.org/ICobranzasWCF/Reporte_CancelacionesResumenActual_v2Response")]
        GS.SISGEGS.DM.gsReporteCanceladosResumenMes_actualResult[] Reporte_CancelacionesResumenActual_v2(int idEmpresa, int codigoUsuario, string codAgenda, string codigoVendedor, int year, int mes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Reporte_CancelacionesResumenActual_v2", ReplyAction="http://tempuri.org/ICobranzasWCF/Reporte_CancelacionesResumenActual_v2Response")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.gsReporteCanceladosResumenMes_actualResult[]> Reporte_CancelacionesResumenActual_v2Async(int idEmpresa, int codigoUsuario, string codAgenda, string codigoVendedor, int year, int mes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Reporte_CancelacionesResumenActual_v3", ReplyAction="http://tempuri.org/ICobranzasWCF/Reporte_CancelacionesResumenActual_v3Response")]
        GS.SISGEGS.DM.gsReporteCanceladosResumenMes_v3Result[] Reporte_CancelacionesResumenActual_v3(int idEmpresa, int codigoUsuario, string codAgenda, string codigoVendedor, int year, int mes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Reporte_CancelacionesResumenActual_v3", ReplyAction="http://tempuri.org/ICobranzasWCF/Reporte_CancelacionesResumenActual_v3Response")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.gsReporteCanceladosResumenMes_v3Result[]> Reporte_CancelacionesResumenActual_v3Async(int idEmpresa, int codigoUsuario, string codAgenda, string codigoVendedor, int year, int mes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Reporte_Proyectado_Sectorista", ReplyAction="http://tempuri.org/ICobranzasWCF/Reporte_Proyectado_SectoristaResponse")]
        GS.SISGEGS.DM.gsProyectadoCobranza_ListarResult[] Reporte_Proyectado_Sectorista(int idEmpresa, int codigoUsuario, int id_proyectado, int periodo, string id_sectorista, string id_cliente, int id_zona, string id_vendedor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Reporte_Proyectado_Sectorista", ReplyAction="http://tempuri.org/ICobranzasWCF/Reporte_Proyectado_SectoristaResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.gsProyectadoCobranza_ListarResult[]> Reporte_Proyectado_SectoristaAsync(int idEmpresa, int codigoUsuario, int id_proyectado, int periodo, string id_sectorista, string id_cliente, int id_zona, string id_vendedor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Insertar_ProyectadoSectorista", ReplyAction="http://tempuri.org/ICobranzasWCF/Insertar_ProyectadoSectoristaResponse")]
        void Insertar_ProyectadoSectorista(int idEmpresa, int codigoUsuario, int id_proyectado, string periodo, string id_sectorista, string id_cliente, decimal montoS1, decimal montoS2, decimal montoS3, decimal montoS4, decimal proyectado, int estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Insertar_ProyectadoSectorista", ReplyAction="http://tempuri.org/ICobranzasWCF/Insertar_ProyectadoSectoristaResponse")]
        System.Threading.Tasks.Task Insertar_ProyectadoSectoristaAsync(int idEmpresa, int codigoUsuario, int id_proyectado, string periodo, string id_sectorista, string id_cliente, decimal montoS1, decimal montoS2, decimal montoS3, decimal montoS4, decimal proyectado, int estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Reporte_Gestion_Sectorista", ReplyAction="http://tempuri.org/ICobranzasWCF/Reporte_Gestion_SectoristaResponse")]
        GS.SISGEGS.DM.gsGestionCobranza_ListarResult[] Reporte_Gestion_Sectorista(int idEmpresa, int codigoUsuario, string id_Cliente, int Periodo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Reporte_Gestion_Sectorista", ReplyAction="http://tempuri.org/ICobranzasWCF/Reporte_Gestion_SectoristaResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.gsGestionCobranza_ListarResult[]> Reporte_Gestion_SectoristaAsync(int idEmpresa, int codigoUsuario, string id_Cliente, int Periodo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Estatus_Deuda_Listar", ReplyAction="http://tempuri.org/ICobranzasWCF/Estatus_Deuda_ListarResponse")]
        GS.SISGEGS.DM.gsEstatus_ListarResult[] Estatus_Deuda_Listar(int idEmpresa, int codigoUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Estatus_Deuda_Listar", ReplyAction="http://tempuri.org/ICobranzasWCF/Estatus_Deuda_ListarResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.gsEstatus_ListarResult[]> Estatus_Deuda_ListarAsync(int idEmpresa, int codigoUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Reporte_CobranzasProyectadasVendedor", ReplyAction="http://tempuri.org/ICobranzasWCF/Reporte_CobranzasProyectadasVendedorResponse")]
        GS.SISGEGS.DM.gsReporteCobranzas_Poryectadas_VendedorResult[] Reporte_CobranzasProyectadasVendedor(int idEmpresa, int codigoUsuario, int mes, int año, int periodo, int id_zona, string id_sectorista);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Reporte_CobranzasProyectadasVendedor", ReplyAction="http://tempuri.org/ICobranzasWCF/Reporte_CobranzasProyectadasVendedorResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.gsReporteCobranzas_Poryectadas_VendedorResult[]> Reporte_CobranzasProyectadasVendedorAsync(int idEmpresa, int codigoUsuario, int mes, int año, int periodo, int id_zona, string id_sectorista);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Reporte_CobranzasProyectadasVendedorDetalle", ReplyAction="http://tempuri.org/ICobranzasWCF/Reporte_CobranzasProyectadasVendedorDetalleRespo" +
            "nse")]
        GS.SISGEGS.DM.gsReporteCobranzas_Poryectadas_Vendedor_DetalleResult[] Reporte_CobranzasProyectadasVendedorDetalle(int idEmpresa, int codigoUsuario, int mes, int año, int periodo, int id_zona, string id_sectorista);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Reporte_CobranzasProyectadasVendedorDetalle", ReplyAction="http://tempuri.org/ICobranzasWCF/Reporte_CobranzasProyectadasVendedorDetalleRespo" +
            "nse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.gsReporteCobranzas_Poryectadas_Vendedor_DetalleResult[]> Reporte_CobranzasProyectadasVendedorDetalleAsync(int idEmpresa, int codigoUsuario, int mes, int año, int periodo, int id_zona, string id_sectorista);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Reporte_CobranzasProyectadasVendedor_Fecha", ReplyAction="http://tempuri.org/ICobranzasWCF/Reporte_CobranzasProyectadasVendedor_FechaRespon" +
            "se")]
        GS.SISGEGS.DM.gsReporteCobranzas_Poryectadas_Vendedor_FechaResult[] Reporte_CobranzasProyectadasVendedor_Fecha(int idEmpresa, int codigoUsuario, int mes, int año, int periodo, int id_zona, string id_sectorista);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Reporte_CobranzasProyectadasVendedor_Fecha", ReplyAction="http://tempuri.org/ICobranzasWCF/Reporte_CobranzasProyectadasVendedor_FechaRespon" +
            "se")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.gsReporteCobranzas_Poryectadas_Vendedor_FechaResult[]> Reporte_CobranzasProyectadasVendedor_FechaAsync(int idEmpresa, int codigoUsuario, int mes, int año, int periodo, int id_zona, string id_sectorista);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/ProyectadoCobranza_Registrar", ReplyAction="http://tempuri.org/ICobranzasWCF/ProyectadoCobranza_RegistrarResponse")]
        void ProyectadoCobranza_Registrar(int idEmpresa, int codigoUsuario, string codAgenda, string codSectorista, string periodo, int id_zona, decimal montoS1, decimal montoS2, decimal montoS3, decimal montoS4, decimal proyectado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/ProyectadoCobranza_Registrar", ReplyAction="http://tempuri.org/ICobranzasWCF/ProyectadoCobranza_RegistrarResponse")]
        System.Threading.Tasks.Task ProyectadoCobranza_RegistrarAsync(int idEmpresa, int codigoUsuario, string codAgenda, string codSectorista, string periodo, int id_zona, decimal montoS1, decimal montoS2, decimal montoS3, decimal montoS4, decimal proyectado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/GestionCobranza_Registrar", ReplyAction="http://tempuri.org/ICobranzasWCF/GestionCobranza_RegistrarResponse")]
        void GestionCobranza_Registrar(int idEmpresa, int codigoUsuario, string id_cliente, string periodo, int id_semana, int id_estatus, string observacion, int estado, string TablaOrigen, int opOrigen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/GestionCobranza_Registrar", ReplyAction="http://tempuri.org/ICobranzasWCF/GestionCobranza_RegistrarResponse")]
        System.Threading.Tasks.Task GestionCobranza_RegistrarAsync(int idEmpresa, int codigoUsuario, string id_cliente, string periodo, int id_semana, int id_estatus, string observacion, int estado, string TablaOrigen, int opOrigen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/ProyectadoCobranza_Verificar", ReplyAction="http://tempuri.org/ICobranzasWCF/ProyectadoCobranza_VerificarResponse")]
        int ProyectadoCobranza_Verificar(int idEmpresa, int codigoUsuario, string codSectorista, string periodo, int id_zona);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/ProyectadoCobranza_Verificar", ReplyAction="http://tempuri.org/ICobranzasWCF/ProyectadoCobranza_VerificarResponse")]
        System.Threading.Tasks.Task<int> ProyectadoCobranza_VerificarAsync(int idEmpresa, int codigoUsuario, string codSectorista, string periodo, int id_zona);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Reporte_VentasCobranzasAnual", ReplyAction="http://tempuri.org/ICobranzasWCF/Reporte_VentasCobranzasAnualResponse")]
        GS.SISGEGS.DM.gsVentasCobranzas_ListarResult[] Reporte_VentasCobranzasAnual(int idEmpresa, int codigoUsuario, int anho);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Reporte_VentasCobranzasAnual", ReplyAction="http://tempuri.org/ICobranzasWCF/Reporte_VentasCobranzasAnualResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.gsVentasCobranzas_ListarResult[]> Reporte_VentasCobranzasAnualAsync(int idEmpresa, int codigoUsuario, int anho);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Reporte_CobranzasProyectadas_Sectorista", ReplyAction="http://tempuri.org/ICobranzasWCF/Reporte_CobranzasProyectadas_SectoristaResponse")]
        GS.SISGEGS.DM.gsReporteCancelados_ProyectadoResult[] Reporte_CobranzasProyectadas_Sectorista(int idEmpresa, int codigoUsuario, int mes, int año, int periodo, int id_zona, string id_sectorista);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Reporte_CobranzasProyectadas_Sectorista", ReplyAction="http://tempuri.org/ICobranzasWCF/Reporte_CobranzasProyectadas_SectoristaResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.gsReporteCancelados_ProyectadoResult[]> Reporte_CobranzasProyectadas_SectoristaAsync(int idEmpresa, int codigoUsuario, int mes, int año, int periodo, int id_zona, string id_sectorista);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Reporte_VentaCobranzaLegal", ReplyAction="http://tempuri.org/ICobranzasWCF/Reporte_VentaCobranzaLegalResponse")]
        GS.SISGEGS.DM.Reporte_VentaxCobranzaLegalResult[] Reporte_VentaCobranzaLegal(int idEmpresa, int codigoUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Reporte_VentaCobranzaLegal", ReplyAction="http://tempuri.org/ICobranzasWCF/Reporte_VentaCobranzaLegalResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.Reporte_VentaxCobranzaLegalResult[]> Reporte_VentaCobranzaLegalAsync(int idEmpresa, int codigoUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Reporte_FacturasInafecta", ReplyAction="http://tempuri.org/ICobranzasWCF/Reporte_FacturasInafectaResponse")]
        GS.SISGEGS.DM.gsReporteFacturasInafectasV1Result[] Reporte_FacturasInafecta(int idEmpresa, int codigoUsuario, System.DateTime FechaInicio, System.DateTime FechaFin, int tipodocumento, string Cliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Reporte_FacturasInafecta", ReplyAction="http://tempuri.org/ICobranzasWCF/Reporte_FacturasInafectaResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.gsReporteFacturasInafectasV1Result[]> Reporte_FacturasInafectaAsync(int idEmpresa, int codigoUsuario, System.DateTime FechaInicio, System.DateTime FechaFin, int tipodocumento, string Cliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/ProyectarCobranza_Registrar", ReplyAction="http://tempuri.org/ICobranzasWCF/ProyectarCobranza_RegistrarResponse")]
        void ProyectarCobranza_Registrar(int idEmpresa, int codigoUsuario, int id_proyectado, string periodo, int id_semana, float Importe, string TablaOrigen, int OpOrigen, int estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/ProyectarCobranza_Registrar", ReplyAction="http://tempuri.org/ICobranzasWCF/ProyectarCobranza_RegistrarResponse")]
        System.Threading.Tasks.Task ProyectarCobranza_RegistrarAsync(int idEmpresa, int codigoUsuario, int id_proyectado, string periodo, int id_semana, float Importe, string TablaOrigen, int OpOrigen, int estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/ProyectadoCobranza_Listar", ReplyAction="http://tempuri.org/ICobranzasWCF/ProyectadoCobranza_ListarResponse")]
        GS.SISGEGS.DM.ProyectadoCobranza_ListarResult[] ProyectadoCobranza_Listar(int idEmpresa, int codigoUsuario, int idProyectado, string periodo, int id_semana, string tablaOrigen, int opOrigen, int estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/ProyectadoCobranza_Listar", ReplyAction="http://tempuri.org/ICobranzasWCF/ProyectadoCobranza_ListarResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.ProyectadoCobranza_ListarResult[]> ProyectadoCobranza_ListarAsync(int idEmpresa, int codigoUsuario, int idProyectado, string periodo, int id_semana, string tablaOrigen, int opOrigen, int estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/ZonasSectorista_Listar", ReplyAction="http://tempuri.org/ICobranzasWCF/ZonasSectorista_ListarResponse")]
        GS.SISGEGS.DM.ZonasSectorista_ListarResult[] ZonasSectorista_Listar(int idEmpresa, int codigoUsuario, string texto, int reporte);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/ZonasSectorista_Listar", ReplyAction="http://tempuri.org/ICobranzasWCF/ZonasSectorista_ListarResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.ZonasSectorista_ListarResult[]> ZonasSectorista_ListarAsync(int idEmpresa, int codigoUsuario, string texto, int reporte);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/ZonasSectoristaPermiso_Listar", ReplyAction="http://tempuri.org/ICobranzasWCF/ZonasSectoristaPermiso_ListarResponse")]
        GS.SISGEGS.DM.ZonasSectoristaPermiso_ListarResult[] ZonasSectoristaPermiso_Listar(int idEmpresa, int codigoUsuario, string id_agenda);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/ZonasSectoristaPermiso_Listar", ReplyAction="http://tempuri.org/ICobranzasWCF/ZonasSectoristaPermiso_ListarResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.ZonasSectoristaPermiso_ListarResult[]> ZonasSectoristaPermiso_ListarAsync(int idEmpresa, int codigoUsuario, string id_agenda);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/PermisosZona_Registrar", ReplyAction="http://tempuri.org/ICobranzasWCF/PermisosZona_RegistrarResponse")]
        int PermisosZona_Registrar(int idEmpresa, int codigoUsuario, string id_agenda, int id_zona, int ActivoZona, int ActivoSectorista);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/PermisosZona_Registrar", ReplyAction="http://tempuri.org/ICobranzasWCF/PermisosZona_RegistrarResponse")]
        System.Threading.Tasks.Task<int> PermisosZona_RegistrarAsync(int idEmpresa, int codigoUsuario, string id_agenda, int id_zona, int ActivoZona, int ActivoSectorista);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/EstadoCuenta_Proyectado", ReplyAction="http://tempuri.org/ICobranzasWCF/EstadoCuenta_ProyectadoResponse")]
        GS.SISGEGS.DM.spEstadoCuenta_ProyectadoResult[] EstadoCuenta_Proyectado(int idEmpresa, int codigoUsuario, int periodo, string id_sectorista, int id_zona, int anho, int mes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/EstadoCuenta_Proyectado", ReplyAction="http://tempuri.org/ICobranzasWCF/EstadoCuenta_ProyectadoResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.spEstadoCuenta_ProyectadoResult[]> EstadoCuenta_ProyectadoAsync(int idEmpresa, int codigoUsuario, int periodo, string id_sectorista, int id_zona, int anho, int mes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/EstadoCuenta_Proyectado_Cliente", ReplyAction="http://tempuri.org/ICobranzasWCF/EstadoCuenta_Proyectado_ClienteResponse")]
        GS.SISGEGS.DM.spEstadoCuenta_Proyectado_ClienteResult[] EstadoCuenta_Proyectado_Cliente(int idEmpresa, int codigoUsuario, string id_cliente, int periodo, string id_sectorista, int id_zona, int anho, int mes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/EstadoCuenta_Proyectado_Cliente", ReplyAction="http://tempuri.org/ICobranzasWCF/EstadoCuenta_Proyectado_ClienteResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.spEstadoCuenta_Proyectado_ClienteResult[]> EstadoCuenta_Proyectado_ClienteAsync(int idEmpresa, int codigoUsuario, string id_cliente, int periodo, string id_sectorista, int id_zona, int anho, int mes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/ProyectadoCobranza_Eliminar", ReplyAction="http://tempuri.org/ICobranzasWCF/ProyectadoCobranza_EliminarResponse")]
        void ProyectadoCobranza_Eliminar(int idEmpresa, int codigoUsuario, int id_proyectado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/ProyectadoCobranza_Eliminar", ReplyAction="http://tempuri.org/ICobranzasWCF/ProyectadoCobranza_EliminarResponse")]
        System.Threading.Tasks.Task ProyectadoCobranza_EliminarAsync(int idEmpresa, int codigoUsuario, int id_proyectado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/ProyectadoCobranza_Documentos", ReplyAction="http://tempuri.org/ICobranzasWCF/ProyectadoCobranza_DocumentosResponse")]
        GS.SISGEGS.DM.ProyectadoCobranza_DocumentosResult[] ProyectadoCobranza_Documentos(int idEmpresa, int codigoUsuario, string id_Cliente, int Periodo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/ProyectadoCobranza_Documentos", ReplyAction="http://tempuri.org/ICobranzasWCF/ProyectadoCobranza_DocumentosResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.ProyectadoCobranza_DocumentosResult[]> ProyectadoCobranza_DocumentosAsync(int idEmpresa, int codigoUsuario, string id_Cliente, int Periodo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Reporte_CobranzasProyectadasCliente", ReplyAction="http://tempuri.org/ICobranzasWCF/Reporte_CobranzasProyectadasClienteResponse")]
        GS.SISGEGS.DM.gsReporteCobranzas_Poryectadas_ClienteResult[] Reporte_CobranzasProyectadasCliente(int idEmpresa, int codigoUsuario, int mes, int año, int periodo, int id_zona, string id_sectorista);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Reporte_CobranzasProyectadasCliente", ReplyAction="http://tempuri.org/ICobranzasWCF/Reporte_CobranzasProyectadasClienteResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.gsReporteCobranzas_Poryectadas_ClienteResult[]> Reporte_CobranzasProyectadasClienteAsync(int idEmpresa, int codigoUsuario, int mes, int año, int periodo, int id_zona, string id_sectorista);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Reporte_CobranzasProyectadas_Cuadro1", ReplyAction="http://tempuri.org/ICobranzasWCF/Reporte_CobranzasProyectadas_Cuadro1Response")]
        GS.SISGEGS.DM.gsReporteProyectado_Cuadro1Result[] Reporte_CobranzasProyectadas_Cuadro1(int idEmpresa, int codigoUsuario, int mes, int año, int periodo, int id_zona, string id_sectorista);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Reporte_CobranzasProyectadas_Cuadro1", ReplyAction="http://tempuri.org/ICobranzasWCF/Reporte_CobranzasProyectadas_Cuadro1Response")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.gsReporteProyectado_Cuadro1Result[]> Reporte_CobranzasProyectadas_Cuadro1Async(int idEmpresa, int codigoUsuario, int mes, int año, int periodo, int id_zona, string id_sectorista);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Reporte_CobranzasProyectadas_Cuadro2", ReplyAction="http://tempuri.org/ICobranzasWCF/Reporte_CobranzasProyectadas_Cuadro2Response")]
        GS.SISGEGS.DM.gsReporteProyectado_Cuadro2Result[] Reporte_CobranzasProyectadas_Cuadro2(int idEmpresa, int codigoUsuario, int mes, int año, int periodo, int id_zona, string id_sectorista);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Reporte_CobranzasProyectadas_Cuadro2", ReplyAction="http://tempuri.org/ICobranzasWCF/Reporte_CobranzasProyectadas_Cuadro2Response")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.gsReporteProyectado_Cuadro2Result[]> Reporte_CobranzasProyectadas_Cuadro2Async(int idEmpresa, int codigoUsuario, int mes, int año, int periodo, int id_zona, string id_sectorista);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Zonas_Listar_Cobranza", ReplyAction="http://tempuri.org/ICobranzasWCF/Zonas_Listar_CobranzaResponse")]
        GS.SISGEGS.DM.Zonas_Reportes_CobranzaResult[] Zonas_Listar_Cobranza(int idEmpresa, int codigoUsuario, string id_sectorista);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobranzasWCF/Zonas_Listar_Cobranza", ReplyAction="http://tempuri.org/ICobranzasWCF/Zonas_Listar_CobranzaResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.Zonas_Reportes_CobranzaResult[]> Zonas_Listar_CobranzaAsync(int idEmpresa, int codigoUsuario, string id_sectorista);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICobranzasWCFChannel : GS.SISGEGS.Web.CobranzasWCF.ICobranzasWCF, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CobranzasWCFClient : System.ServiceModel.ClientBase<GS.SISGEGS.Web.CobranzasWCF.ICobranzasWCF>, GS.SISGEGS.Web.CobranzasWCF.ICobranzasWCF {
        
        public CobranzasWCFClient() {
        }
        
        public CobranzasWCFClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CobranzasWCFClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CobranzasWCFClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CobranzasWCFClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public GS.SISGEGS.DM.gsReporteCanceladosWebResult[] Reporte_Cancelaciones(int idEmpresa, int codigoUsuario, string codAgenda, string codVendedor, System.DateTime fechaInicial, System.DateTime fechaFinal) {
            return base.Channel.Reporte_Cancelaciones(idEmpresa, codigoUsuario, codAgenda, codVendedor, fechaInicial, fechaFinal);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.gsReporteCanceladosWebResult[]> Reporte_CancelacionesAsync(int idEmpresa, int codigoUsuario, string codAgenda, string codVendedor, System.DateTime fechaInicial, System.DateTime fechaFinal) {
            return base.Channel.Reporte_CancelacionesAsync(idEmpresa, codigoUsuario, codAgenda, codVendedor, fechaInicial, fechaFinal);
        }
        
        public GS.SISGEGS.DM.gsDocVenta_ReporteVenta_ClienteResult[] Reporte_VentasCliente(int idEmpresa, int codigoUsuario, string codAgenda, string codigoVendedor, System.DateTime fechaInicial, System.DateTime fechaFinal, string ESTADO) {
            return base.Channel.Reporte_VentasCliente(idEmpresa, codigoUsuario, codAgenda, codigoVendedor, fechaInicial, fechaFinal, ESTADO);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.gsDocVenta_ReporteVenta_ClienteResult[]> Reporte_VentasClienteAsync(int idEmpresa, int codigoUsuario, string codAgenda, string codigoVendedor, System.DateTime fechaInicial, System.DateTime fechaFinal, string ESTADO) {
            return base.Channel.Reporte_VentasClienteAsync(idEmpresa, codigoUsuario, codAgenda, codigoVendedor, fechaInicial, fechaFinal, ESTADO);
        }
        
        public GS.SISGEGS.DM.gsDocVenta_ReporteVenta_ClienteResumenResult[] Reporte_VentasClienteResumen(int idEmpresa, int codigoUsuario, string codAgenda, string codigoVendedor, System.DateTime fechaInicial, System.DateTime fechaFinal, int year) {
            return base.Channel.Reporte_VentasClienteResumen(idEmpresa, codigoUsuario, codAgenda, codigoVendedor, fechaInicial, fechaFinal, year);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.gsDocVenta_ReporteVenta_ClienteResumenResult[]> Reporte_VentasClienteResumenAsync(int idEmpresa, int codigoUsuario, string codAgenda, string codigoVendedor, System.DateTime fechaInicial, System.DateTime fechaFinal, int year) {
            return base.Channel.Reporte_VentasClienteResumenAsync(idEmpresa, codigoUsuario, codAgenda, codigoVendedor, fechaInicial, fechaFinal, year);
        }
        
        public GS.SISGEGS.DM.gsReporteCanceladosWebResumenResult[] Reporte_CancelacionesResumen(int idEmpresa, int codigoUsuario, string codAgenda, string codigoVendedor, int year) {
            return base.Channel.Reporte_CancelacionesResumen(idEmpresa, codigoUsuario, codAgenda, codigoVendedor, year);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.gsReporteCanceladosWebResumenResult[]> Reporte_CancelacionesResumenAsync(int idEmpresa, int codigoUsuario, string codAgenda, string codigoVendedor, int year) {
            return base.Channel.Reporte_CancelacionesResumenAsync(idEmpresa, codigoUsuario, codAgenda, codigoVendedor, year);
        }
        
        public GS.SISGEGS.DM.gsReporteCanceladosWebResumenVendedorResult[] Reporte_CancelacionesResumenVendedor(int idEmpresa, int codigoUsuario, string codAgenda, string codigoVendedor, System.DateTime fechaInicial, System.DateTime fechaFinal) {
            return base.Channel.Reporte_CancelacionesResumenVendedor(idEmpresa, codigoUsuario, codAgenda, codigoVendedor, fechaInicial, fechaFinal);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.gsReporteCanceladosWebResumenVendedorResult[]> Reporte_CancelacionesResumenVendedorAsync(int idEmpresa, int codigoUsuario, string codAgenda, string codigoVendedor, System.DateTime fechaInicial, System.DateTime fechaFinal) {
            return base.Channel.Reporte_CancelacionesResumenVendedorAsync(idEmpresa, codigoUsuario, codAgenda, codigoVendedor, fechaInicial, fechaFinal);
        }
        
        public GS.SISGEGS.DM.gsReporteCanceladosResumenMes_actualResult[] Reporte_CancelacionesResumenActual(int idEmpresa, int codigoUsuario, string codAgenda, string codigoVendedor, int year, int mes) {
            return base.Channel.Reporte_CancelacionesResumenActual(idEmpresa, codigoUsuario, codAgenda, codigoVendedor, year, mes);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.gsReporteCanceladosResumenMes_actualResult[]> Reporte_CancelacionesResumenActualAsync(int idEmpresa, int codigoUsuario, string codAgenda, string codigoVendedor, int year, int mes) {
            return base.Channel.Reporte_CancelacionesResumenActualAsync(idEmpresa, codigoUsuario, codAgenda, codigoVendedor, year, mes);
        }
        
        public GS.SISGEGS.DM.gsReporteCobranzaWeb_DetalleMesResult[] Reporte_CancelacionesResumenDetalleMes(int idEmpresa, int codigoUsuario, string codAgenda, string codigoVendedor, int year, int mes) {
            return base.Channel.Reporte_CancelacionesResumenDetalleMes(idEmpresa, codigoUsuario, codAgenda, codigoVendedor, year, mes);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.gsReporteCobranzaWeb_DetalleMesResult[]> Reporte_CancelacionesResumenDetalleMesAsync(int idEmpresa, int codigoUsuario, string codAgenda, string codigoVendedor, int year, int mes) {
            return base.Channel.Reporte_CancelacionesResumenDetalleMesAsync(idEmpresa, codigoUsuario, codAgenda, codigoVendedor, year, mes);
        }
        
        public GS.SISGEGS.DM.gsReporteCanceladosResumenMes_actualResult[] Reporte_CancelacionesResumenActual_v2(int idEmpresa, int codigoUsuario, string codAgenda, string codigoVendedor, int year, int mes) {
            return base.Channel.Reporte_CancelacionesResumenActual_v2(idEmpresa, codigoUsuario, codAgenda, codigoVendedor, year, mes);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.gsReporteCanceladosResumenMes_actualResult[]> Reporte_CancelacionesResumenActual_v2Async(int idEmpresa, int codigoUsuario, string codAgenda, string codigoVendedor, int year, int mes) {
            return base.Channel.Reporte_CancelacionesResumenActual_v2Async(idEmpresa, codigoUsuario, codAgenda, codigoVendedor, year, mes);
        }
        
        public GS.SISGEGS.DM.gsReporteCanceladosResumenMes_v3Result[] Reporte_CancelacionesResumenActual_v3(int idEmpresa, int codigoUsuario, string codAgenda, string codigoVendedor, int year, int mes) {
            return base.Channel.Reporte_CancelacionesResumenActual_v3(idEmpresa, codigoUsuario, codAgenda, codigoVendedor, year, mes);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.gsReporteCanceladosResumenMes_v3Result[]> Reporte_CancelacionesResumenActual_v3Async(int idEmpresa, int codigoUsuario, string codAgenda, string codigoVendedor, int year, int mes) {
            return base.Channel.Reporte_CancelacionesResumenActual_v3Async(idEmpresa, codigoUsuario, codAgenda, codigoVendedor, year, mes);
        }
        
        public GS.SISGEGS.DM.gsProyectadoCobranza_ListarResult[] Reporte_Proyectado_Sectorista(int idEmpresa, int codigoUsuario, int id_proyectado, int periodo, string id_sectorista, string id_cliente, int id_zona, string id_vendedor) {
            return base.Channel.Reporte_Proyectado_Sectorista(idEmpresa, codigoUsuario, id_proyectado, periodo, id_sectorista, id_cliente, id_zona, id_vendedor);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.gsProyectadoCobranza_ListarResult[]> Reporte_Proyectado_SectoristaAsync(int idEmpresa, int codigoUsuario, int id_proyectado, int periodo, string id_sectorista, string id_cliente, int id_zona, string id_vendedor) {
            return base.Channel.Reporte_Proyectado_SectoristaAsync(idEmpresa, codigoUsuario, id_proyectado, periodo, id_sectorista, id_cliente, id_zona, id_vendedor);
        }
        
        public void Insertar_ProyectadoSectorista(int idEmpresa, int codigoUsuario, int id_proyectado, string periodo, string id_sectorista, string id_cliente, decimal montoS1, decimal montoS2, decimal montoS3, decimal montoS4, decimal proyectado, int estado) {
            base.Channel.Insertar_ProyectadoSectorista(idEmpresa, codigoUsuario, id_proyectado, periodo, id_sectorista, id_cliente, montoS1, montoS2, montoS3, montoS4, proyectado, estado);
        }
        
        public System.Threading.Tasks.Task Insertar_ProyectadoSectoristaAsync(int idEmpresa, int codigoUsuario, int id_proyectado, string periodo, string id_sectorista, string id_cliente, decimal montoS1, decimal montoS2, decimal montoS3, decimal montoS4, decimal proyectado, int estado) {
            return base.Channel.Insertar_ProyectadoSectoristaAsync(idEmpresa, codigoUsuario, id_proyectado, periodo, id_sectorista, id_cliente, montoS1, montoS2, montoS3, montoS4, proyectado, estado);
        }
        
        public GS.SISGEGS.DM.gsGestionCobranza_ListarResult[] Reporte_Gestion_Sectorista(int idEmpresa, int codigoUsuario, string id_Cliente, int Periodo) {
            return base.Channel.Reporte_Gestion_Sectorista(idEmpresa, codigoUsuario, id_Cliente, Periodo);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.gsGestionCobranza_ListarResult[]> Reporte_Gestion_SectoristaAsync(int idEmpresa, int codigoUsuario, string id_Cliente, int Periodo) {
            return base.Channel.Reporte_Gestion_SectoristaAsync(idEmpresa, codigoUsuario, id_Cliente, Periodo);
        }
        
        public GS.SISGEGS.DM.gsEstatus_ListarResult[] Estatus_Deuda_Listar(int idEmpresa, int codigoUsuario) {
            return base.Channel.Estatus_Deuda_Listar(idEmpresa, codigoUsuario);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.gsEstatus_ListarResult[]> Estatus_Deuda_ListarAsync(int idEmpresa, int codigoUsuario) {
            return base.Channel.Estatus_Deuda_ListarAsync(idEmpresa, codigoUsuario);
        }
        
        public GS.SISGEGS.DM.gsReporteCobranzas_Poryectadas_VendedorResult[] Reporte_CobranzasProyectadasVendedor(int idEmpresa, int codigoUsuario, int mes, int año, int periodo, int id_zona, string id_sectorista) {
            return base.Channel.Reporte_CobranzasProyectadasVendedor(idEmpresa, codigoUsuario, mes, año, periodo, id_zona, id_sectorista);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.gsReporteCobranzas_Poryectadas_VendedorResult[]> Reporte_CobranzasProyectadasVendedorAsync(int idEmpresa, int codigoUsuario, int mes, int año, int periodo, int id_zona, string id_sectorista) {
            return base.Channel.Reporte_CobranzasProyectadasVendedorAsync(idEmpresa, codigoUsuario, mes, año, periodo, id_zona, id_sectorista);
        }
        
        public GS.SISGEGS.DM.gsReporteCobranzas_Poryectadas_Vendedor_DetalleResult[] Reporte_CobranzasProyectadasVendedorDetalle(int idEmpresa, int codigoUsuario, int mes, int año, int periodo, int id_zona, string id_sectorista) {
            return base.Channel.Reporte_CobranzasProyectadasVendedorDetalle(idEmpresa, codigoUsuario, mes, año, periodo, id_zona, id_sectorista);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.gsReporteCobranzas_Poryectadas_Vendedor_DetalleResult[]> Reporte_CobranzasProyectadasVendedorDetalleAsync(int idEmpresa, int codigoUsuario, int mes, int año, int periodo, int id_zona, string id_sectorista) {
            return base.Channel.Reporte_CobranzasProyectadasVendedorDetalleAsync(idEmpresa, codigoUsuario, mes, año, periodo, id_zona, id_sectorista);
        }
        
        public GS.SISGEGS.DM.gsReporteCobranzas_Poryectadas_Vendedor_FechaResult[] Reporte_CobranzasProyectadasVendedor_Fecha(int idEmpresa, int codigoUsuario, int mes, int año, int periodo, int id_zona, string id_sectorista) {
            return base.Channel.Reporte_CobranzasProyectadasVendedor_Fecha(idEmpresa, codigoUsuario, mes, año, periodo, id_zona, id_sectorista);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.gsReporteCobranzas_Poryectadas_Vendedor_FechaResult[]> Reporte_CobranzasProyectadasVendedor_FechaAsync(int idEmpresa, int codigoUsuario, int mes, int año, int periodo, int id_zona, string id_sectorista) {
            return base.Channel.Reporte_CobranzasProyectadasVendedor_FechaAsync(idEmpresa, codigoUsuario, mes, año, periodo, id_zona, id_sectorista);
        }
        
        public void ProyectadoCobranza_Registrar(int idEmpresa, int codigoUsuario, string codAgenda, string codSectorista, string periodo, int id_zona, decimal montoS1, decimal montoS2, decimal montoS3, decimal montoS4, decimal proyectado) {
            base.Channel.ProyectadoCobranza_Registrar(idEmpresa, codigoUsuario, codAgenda, codSectorista, periodo, id_zona, montoS1, montoS2, montoS3, montoS4, proyectado);
        }
        
        public System.Threading.Tasks.Task ProyectadoCobranza_RegistrarAsync(int idEmpresa, int codigoUsuario, string codAgenda, string codSectorista, string periodo, int id_zona, decimal montoS1, decimal montoS2, decimal montoS3, decimal montoS4, decimal proyectado) {
            return base.Channel.ProyectadoCobranza_RegistrarAsync(idEmpresa, codigoUsuario, codAgenda, codSectorista, periodo, id_zona, montoS1, montoS2, montoS3, montoS4, proyectado);
        }
        
        public void GestionCobranza_Registrar(int idEmpresa, int codigoUsuario, string id_cliente, string periodo, int id_semana, int id_estatus, string observacion, int estado, string TablaOrigen, int opOrigen) {
            base.Channel.GestionCobranza_Registrar(idEmpresa, codigoUsuario, id_cliente, periodo, id_semana, id_estatus, observacion, estado, TablaOrigen, opOrigen);
        }
        
        public System.Threading.Tasks.Task GestionCobranza_RegistrarAsync(int idEmpresa, int codigoUsuario, string id_cliente, string periodo, int id_semana, int id_estatus, string observacion, int estado, string TablaOrigen, int opOrigen) {
            return base.Channel.GestionCobranza_RegistrarAsync(idEmpresa, codigoUsuario, id_cliente, periodo, id_semana, id_estatus, observacion, estado, TablaOrigen, opOrigen);
        }
        
        public int ProyectadoCobranza_Verificar(int idEmpresa, int codigoUsuario, string codSectorista, string periodo, int id_zona) {
            return base.Channel.ProyectadoCobranza_Verificar(idEmpresa, codigoUsuario, codSectorista, periodo, id_zona);
        }
        
        public System.Threading.Tasks.Task<int> ProyectadoCobranza_VerificarAsync(int idEmpresa, int codigoUsuario, string codSectorista, string periodo, int id_zona) {
            return base.Channel.ProyectadoCobranza_VerificarAsync(idEmpresa, codigoUsuario, codSectorista, periodo, id_zona);
        }
        
        public GS.SISGEGS.DM.gsVentasCobranzas_ListarResult[] Reporte_VentasCobranzasAnual(int idEmpresa, int codigoUsuario, int anho) {
            return base.Channel.Reporte_VentasCobranzasAnual(idEmpresa, codigoUsuario, anho);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.gsVentasCobranzas_ListarResult[]> Reporte_VentasCobranzasAnualAsync(int idEmpresa, int codigoUsuario, int anho) {
            return base.Channel.Reporte_VentasCobranzasAnualAsync(idEmpresa, codigoUsuario, anho);
        }
        
        public GS.SISGEGS.DM.gsReporteCancelados_ProyectadoResult[] Reporte_CobranzasProyectadas_Sectorista(int idEmpresa, int codigoUsuario, int mes, int año, int periodo, int id_zona, string id_sectorista) {
            return base.Channel.Reporte_CobranzasProyectadas_Sectorista(idEmpresa, codigoUsuario, mes, año, periodo, id_zona, id_sectorista);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.gsReporteCancelados_ProyectadoResult[]> Reporte_CobranzasProyectadas_SectoristaAsync(int idEmpresa, int codigoUsuario, int mes, int año, int periodo, int id_zona, string id_sectorista) {
            return base.Channel.Reporte_CobranzasProyectadas_SectoristaAsync(idEmpresa, codigoUsuario, mes, año, periodo, id_zona, id_sectorista);
        }
        
        public GS.SISGEGS.DM.Reporte_VentaxCobranzaLegalResult[] Reporte_VentaCobranzaLegal(int idEmpresa, int codigoUsuario) {
            return base.Channel.Reporte_VentaCobranzaLegal(idEmpresa, codigoUsuario);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.Reporte_VentaxCobranzaLegalResult[]> Reporte_VentaCobranzaLegalAsync(int idEmpresa, int codigoUsuario) {
            return base.Channel.Reporte_VentaCobranzaLegalAsync(idEmpresa, codigoUsuario);
        }
        
        public GS.SISGEGS.DM.gsReporteFacturasInafectasV1Result[] Reporte_FacturasInafecta(int idEmpresa, int codigoUsuario, System.DateTime FechaInicio, System.DateTime FechaFin, int tipodocumento, string Cliente) {
            return base.Channel.Reporte_FacturasInafecta(idEmpresa, codigoUsuario, FechaInicio, FechaFin, tipodocumento, Cliente);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.gsReporteFacturasInafectasV1Result[]> Reporte_FacturasInafectaAsync(int idEmpresa, int codigoUsuario, System.DateTime FechaInicio, System.DateTime FechaFin, int tipodocumento, string Cliente) {
            return base.Channel.Reporte_FacturasInafectaAsync(idEmpresa, codigoUsuario, FechaInicio, FechaFin, tipodocumento, Cliente);
        }
        
        public void ProyectarCobranza_Registrar(int idEmpresa, int codigoUsuario, int id_proyectado, string periodo, int id_semana, float Importe, string TablaOrigen, int OpOrigen, int estado) {
            base.Channel.ProyectarCobranza_Registrar(idEmpresa, codigoUsuario, id_proyectado, periodo, id_semana, Importe, TablaOrigen, OpOrigen, estado);
        }
        
        public System.Threading.Tasks.Task ProyectarCobranza_RegistrarAsync(int idEmpresa, int codigoUsuario, int id_proyectado, string periodo, int id_semana, float Importe, string TablaOrigen, int OpOrigen, int estado) {
            return base.Channel.ProyectarCobranza_RegistrarAsync(idEmpresa, codigoUsuario, id_proyectado, periodo, id_semana, Importe, TablaOrigen, OpOrigen, estado);
        }
        
        public GS.SISGEGS.DM.ProyectadoCobranza_ListarResult[] ProyectadoCobranza_Listar(int idEmpresa, int codigoUsuario, int idProyectado, string periodo, int id_semana, string tablaOrigen, int opOrigen, int estado) {
            return base.Channel.ProyectadoCobranza_Listar(idEmpresa, codigoUsuario, idProyectado, periodo, id_semana, tablaOrigen, opOrigen, estado);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.ProyectadoCobranza_ListarResult[]> ProyectadoCobranza_ListarAsync(int idEmpresa, int codigoUsuario, int idProyectado, string periodo, int id_semana, string tablaOrigen, int opOrigen, int estado) {
            return base.Channel.ProyectadoCobranza_ListarAsync(idEmpresa, codigoUsuario, idProyectado, periodo, id_semana, tablaOrigen, opOrigen, estado);
        }
        
        public GS.SISGEGS.DM.ZonasSectorista_ListarResult[] ZonasSectorista_Listar(int idEmpresa, int codigoUsuario, string texto, int reporte) {
            return base.Channel.ZonasSectorista_Listar(idEmpresa, codigoUsuario, texto, reporte);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.ZonasSectorista_ListarResult[]> ZonasSectorista_ListarAsync(int idEmpresa, int codigoUsuario, string texto, int reporte) {
            return base.Channel.ZonasSectorista_ListarAsync(idEmpresa, codigoUsuario, texto, reporte);
        }
        
        public GS.SISGEGS.DM.ZonasSectoristaPermiso_ListarResult[] ZonasSectoristaPermiso_Listar(int idEmpresa, int codigoUsuario, string id_agenda) {
            return base.Channel.ZonasSectoristaPermiso_Listar(idEmpresa, codigoUsuario, id_agenda);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.ZonasSectoristaPermiso_ListarResult[]> ZonasSectoristaPermiso_ListarAsync(int idEmpresa, int codigoUsuario, string id_agenda) {
            return base.Channel.ZonasSectoristaPermiso_ListarAsync(idEmpresa, codigoUsuario, id_agenda);
        }
        
        public int PermisosZona_Registrar(int idEmpresa, int codigoUsuario, string id_agenda, int id_zona, int ActivoZona, int ActivoSectorista) {
            return base.Channel.PermisosZona_Registrar(idEmpresa, codigoUsuario, id_agenda, id_zona, ActivoZona, ActivoSectorista);
        }
        
        public System.Threading.Tasks.Task<int> PermisosZona_RegistrarAsync(int idEmpresa, int codigoUsuario, string id_agenda, int id_zona, int ActivoZona, int ActivoSectorista) {
            return base.Channel.PermisosZona_RegistrarAsync(idEmpresa, codigoUsuario, id_agenda, id_zona, ActivoZona, ActivoSectorista);
        }
        
        public GS.SISGEGS.DM.spEstadoCuenta_ProyectadoResult[] EstadoCuenta_Proyectado(int idEmpresa, int codigoUsuario, int periodo, string id_sectorista, int id_zona, int anho, int mes) {
            return base.Channel.EstadoCuenta_Proyectado(idEmpresa, codigoUsuario, periodo, id_sectorista, id_zona, anho, mes);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.spEstadoCuenta_ProyectadoResult[]> EstadoCuenta_ProyectadoAsync(int idEmpresa, int codigoUsuario, int periodo, string id_sectorista, int id_zona, int anho, int mes) {
            return base.Channel.EstadoCuenta_ProyectadoAsync(idEmpresa, codigoUsuario, periodo, id_sectorista, id_zona, anho, mes);
        }
        
        public GS.SISGEGS.DM.spEstadoCuenta_Proyectado_ClienteResult[] EstadoCuenta_Proyectado_Cliente(int idEmpresa, int codigoUsuario, string id_cliente, int periodo, string id_sectorista, int id_zona, int anho, int mes) {
            return base.Channel.EstadoCuenta_Proyectado_Cliente(idEmpresa, codigoUsuario, id_cliente, periodo, id_sectorista, id_zona, anho, mes);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.spEstadoCuenta_Proyectado_ClienteResult[]> EstadoCuenta_Proyectado_ClienteAsync(int idEmpresa, int codigoUsuario, string id_cliente, int periodo, string id_sectorista, int id_zona, int anho, int mes) {
            return base.Channel.EstadoCuenta_Proyectado_ClienteAsync(idEmpresa, codigoUsuario, id_cliente, periodo, id_sectorista, id_zona, anho, mes);
        }
        
        public void ProyectadoCobranza_Eliminar(int idEmpresa, int codigoUsuario, int id_proyectado) {
            base.Channel.ProyectadoCobranza_Eliminar(idEmpresa, codigoUsuario, id_proyectado);
        }
        
        public System.Threading.Tasks.Task ProyectadoCobranza_EliminarAsync(int idEmpresa, int codigoUsuario, int id_proyectado) {
            return base.Channel.ProyectadoCobranza_EliminarAsync(idEmpresa, codigoUsuario, id_proyectado);
        }
        
        public GS.SISGEGS.DM.ProyectadoCobranza_DocumentosResult[] ProyectadoCobranza_Documentos(int idEmpresa, int codigoUsuario, string id_Cliente, int Periodo) {
            return base.Channel.ProyectadoCobranza_Documentos(idEmpresa, codigoUsuario, id_Cliente, Periodo);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.ProyectadoCobranza_DocumentosResult[]> ProyectadoCobranza_DocumentosAsync(int idEmpresa, int codigoUsuario, string id_Cliente, int Periodo) {
            return base.Channel.ProyectadoCobranza_DocumentosAsync(idEmpresa, codigoUsuario, id_Cliente, Periodo);
        }
        
        public GS.SISGEGS.DM.gsReporteCobranzas_Poryectadas_ClienteResult[] Reporte_CobranzasProyectadasCliente(int idEmpresa, int codigoUsuario, int mes, int año, int periodo, int id_zona, string id_sectorista) {
            return base.Channel.Reporte_CobranzasProyectadasCliente(idEmpresa, codigoUsuario, mes, año, periodo, id_zona, id_sectorista);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.gsReporteCobranzas_Poryectadas_ClienteResult[]> Reporte_CobranzasProyectadasClienteAsync(int idEmpresa, int codigoUsuario, int mes, int año, int periodo, int id_zona, string id_sectorista) {
            return base.Channel.Reporte_CobranzasProyectadasClienteAsync(idEmpresa, codigoUsuario, mes, año, periodo, id_zona, id_sectorista);
        }
        
        public GS.SISGEGS.DM.gsReporteProyectado_Cuadro1Result[] Reporte_CobranzasProyectadas_Cuadro1(int idEmpresa, int codigoUsuario, int mes, int año, int periodo, int id_zona, string id_sectorista) {
            return base.Channel.Reporte_CobranzasProyectadas_Cuadro1(idEmpresa, codigoUsuario, mes, año, periodo, id_zona, id_sectorista);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.gsReporteProyectado_Cuadro1Result[]> Reporte_CobranzasProyectadas_Cuadro1Async(int idEmpresa, int codigoUsuario, int mes, int año, int periodo, int id_zona, string id_sectorista) {
            return base.Channel.Reporte_CobranzasProyectadas_Cuadro1Async(idEmpresa, codigoUsuario, mes, año, periodo, id_zona, id_sectorista);
        }
        
        public GS.SISGEGS.DM.gsReporteProyectado_Cuadro2Result[] Reporte_CobranzasProyectadas_Cuadro2(int idEmpresa, int codigoUsuario, int mes, int año, int periodo, int id_zona, string id_sectorista) {
            return base.Channel.Reporte_CobranzasProyectadas_Cuadro2(idEmpresa, codigoUsuario, mes, año, periodo, id_zona, id_sectorista);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.gsReporteProyectado_Cuadro2Result[]> Reporte_CobranzasProyectadas_Cuadro2Async(int idEmpresa, int codigoUsuario, int mes, int año, int periodo, int id_zona, string id_sectorista) {
            return base.Channel.Reporte_CobranzasProyectadas_Cuadro2Async(idEmpresa, codigoUsuario, mes, año, periodo, id_zona, id_sectorista);
        }
        
        public GS.SISGEGS.DM.Zonas_Reportes_CobranzaResult[] Zonas_Listar_Cobranza(int idEmpresa, int codigoUsuario, string id_sectorista) {
            return base.Channel.Zonas_Listar_Cobranza(idEmpresa, codigoUsuario, id_sectorista);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.Zonas_Reportes_CobranzaResult[]> Zonas_Listar_CobranzaAsync(int idEmpresa, int codigoUsuario, string id_sectorista) {
            return base.Channel.Zonas_Listar_CobranzaAsync(idEmpresa, codigoUsuario, id_sectorista);
        }
    }
}
