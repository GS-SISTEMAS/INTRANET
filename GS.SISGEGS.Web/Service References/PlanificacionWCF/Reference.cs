//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GS.SISGEGS.Web.PlanificacionWCF {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PlanificacionWCF.IPlanificacionWCF")]
    public interface IPlanificacionWCF {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/Perfil_Listar", ReplyAction="http://tempuri.org/IPlanificacionWCF/Perfil_ListarResponse")]
        GS.SISGEGS.DM.GS_GetAllModulosResult[] Perfil_Listar(int idEmpresa, int codigoUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/Perfil_Listar", ReplyAction="http://tempuri.org/IPlanificacionWCF/Perfil_ListarResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.GS_GetAllModulosResult[]> Perfil_ListarAsync(int idEmpresa, int codigoUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/Modulos_Actualizar", ReplyAction="http://tempuri.org/IPlanificacionWCF/Modulos_ActualizarResponse")]
        void Modulos_Actualizar(int idEmpresa, int codigoUsuario, int id_Modulo, string detalle, string id_Agenda, int id_Estado, string usuarioModificacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/Modulos_Actualizar", ReplyAction="http://tempuri.org/IPlanificacionWCF/Modulos_ActualizarResponse")]
        System.Threading.Tasks.Task Modulos_ActualizarAsync(int idEmpresa, int codigoUsuario, int id_Modulo, string detalle, string id_Agenda, int id_Estado, string usuarioModificacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/GetPlanificacionByPeriodo", ReplyAction="http://tempuri.org/IPlanificacionWCF/GetPlanificacionByPeriodoResponse")]
        GS.SISGEGS.DM.GS_GetPlanificacionByPeriodoResult[] GetPlanificacionByPeriodo(int idEmpresa, int codigoUsuario, string periodo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/GetPlanificacionByPeriodo", ReplyAction="http://tempuri.org/IPlanificacionWCF/GetPlanificacionByPeriodoResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.GS_GetPlanificacionByPeriodoResult[]> GetPlanificacionByPeriodoAsync(int idEmpresa, int codigoUsuario, string periodo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/GetPlanificacionDetalleByIdPlan", ReplyAction="http://tempuri.org/IPlanificacionWCF/GetPlanificacionDetalleByIdPlanResponse")]
        GS.SISGEGS.DM.GS_GetPlanificacionDetalleByIdPlanResult[] GetPlanificacionDetalleByIdPlan(int idEmpresa, int codigoUsuario, string idPlanificacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/GetPlanificacionDetalleByIdPlan", ReplyAction="http://tempuri.org/IPlanificacionWCF/GetPlanificacionDetalleByIdPlanResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.GS_GetPlanificacionDetalleByIdPlanResult[]> GetPlanificacionDetalleByIdPlanAsync(int idEmpresa, int codigoUsuario, string idPlanificacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/GetPlanDetalleToInsert", ReplyAction="http://tempuri.org/IPlanificacionWCF/GetPlanDetalleToInsertResponse")]
        GS.SISGEGS.DM.GS_GetPlanDetalleToInsertResult[] GetPlanDetalleToInsert(int idEmpresa, int codigoUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/GetPlanDetalleToInsert", ReplyAction="http://tempuri.org/IPlanificacionWCF/GetPlanDetalleToInsertResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.GS_GetPlanDetalleToInsertResult[]> GetPlanDetalleToInsertAsync(int idEmpresa, int codigoUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/GetPlanDetalleToEdit", ReplyAction="http://tempuri.org/IPlanificacionWCF/GetPlanDetalleToEditResponse")]
        GS.SISGEGS.DM.GS_GetPlanDetalleToEditResult[] GetPlanDetalleToEdit(int idEmpresa, int codigoUsuario, string idPlanificacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/GetPlanDetalleToEdit", ReplyAction="http://tempuri.org/IPlanificacionWCF/GetPlanDetalleToEditResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.GS_GetPlanDetalleToEditResult[]> GetPlanDetalleToEditAsync(int idEmpresa, int codigoUsuario, string idPlanificacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/PlanificacionCabecera_Insertar", ReplyAction="http://tempuri.org/IPlanificacionWCF/PlanificacionCabecera_InsertarResponse")]
        int PlanificacionCabecera_Insertar(int idEmpresa, int codigoUsuario, string periodo, System.DateTime fechaInicio, System.DateTime fechaFin, string usuarioCreacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/PlanificacionCabecera_Insertar", ReplyAction="http://tempuri.org/IPlanificacionWCF/PlanificacionCabecera_InsertarResponse")]
        System.Threading.Tasks.Task<int> PlanificacionCabecera_InsertarAsync(int idEmpresa, int codigoUsuario, string periodo, System.DateTime fechaInicio, System.DateTime fechaFin, string usuarioCreacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/PlanificacionCabecera_Update", ReplyAction="http://tempuri.org/IPlanificacionWCF/PlanificacionCabecera_UpdateResponse")]
        void PlanificacionCabecera_Update(int idEmpresa, int codigoUsuario, int idPlanificacion, System.DateTime fechaInicio, System.DateTime fechaFin, string usuarioCreacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/PlanificacionCabecera_Update", ReplyAction="http://tempuri.org/IPlanificacionWCF/PlanificacionCabecera_UpdateResponse")]
        System.Threading.Tasks.Task PlanificacionCabecera_UpdateAsync(int idEmpresa, int codigoUsuario, int idPlanificacion, System.DateTime fechaInicio, System.DateTime fechaFin, string usuarioCreacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/PlanificacionDetalle_Insertar", ReplyAction="http://tempuri.org/IPlanificacionWCF/PlanificacionDetalle_InsertarResponse")]
        int PlanificacionDetalle_Insertar(int idEmpresa, int codigoUsuario, int id_Modulo, int idPlanificacion, System.DateTime fechaCierre, string detalle, string observacion, int estado, string usuarioCreacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/PlanificacionDetalle_Insertar", ReplyAction="http://tempuri.org/IPlanificacionWCF/PlanificacionDetalle_InsertarResponse")]
        System.Threading.Tasks.Task<int> PlanificacionDetalle_InsertarAsync(int idEmpresa, int codigoUsuario, int id_Modulo, int idPlanificacion, System.DateTime fechaCierre, string detalle, string observacion, int estado, string usuarioCreacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/GetAgendaLista", ReplyAction="http://tempuri.org/IPlanificacionWCF/GetAgendaListaResponse")]
        GS.SISGEGS.DM.GS_GetAgendaListaResult[] GetAgendaLista(int idEmpresa, int codigoUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/GetAgendaLista", ReplyAction="http://tempuri.org/IPlanificacionWCF/GetAgendaListaResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.GS_GetAgendaListaResult[]> GetAgendaListaAsync(int idEmpresa, int codigoUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/PlanificacionHistorial_Insertar", ReplyAction="http://tempuri.org/IPlanificacionWCF/PlanificacionHistorial_InsertarResponse")]
        void PlanificacionHistorial_Insertar(int idEmpresa, int codigoUsuario, int id_detalle, int id_Modulo, string id_Agenda, string detalle, string observacion, System.DateTime fechaCierre, string usuarioModificacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/PlanificacionHistorial_Insertar", ReplyAction="http://tempuri.org/IPlanificacionWCF/PlanificacionHistorial_InsertarResponse")]
        System.Threading.Tasks.Task PlanificacionHistorial_InsertarAsync(int idEmpresa, int codigoUsuario, int id_detalle, int id_Modulo, string id_Agenda, string detalle, string observacion, System.DateTime fechaCierre, string usuarioModificacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/PlanificacionDetalle_Actualizar", ReplyAction="http://tempuri.org/IPlanificacionWCF/PlanificacionDetalle_ActualizarResponse")]
        void PlanificacionDetalle_Actualizar(int idEmpresa, int codigoUsuario, int id_detalle, string detalle, string observacion, System.DateTime fechaCierre, string usuarioModificacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/PlanificacionDetalle_Actualizar", ReplyAction="http://tempuri.org/IPlanificacionWCF/PlanificacionDetalle_ActualizarResponse")]
        System.Threading.Tasks.Task PlanificacionDetalle_ActualizarAsync(int idEmpresa, int codigoUsuario, int id_detalle, string detalle, string observacion, System.DateTime fechaCierre, string usuarioModificacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/GetHistorialCambios", ReplyAction="http://tempuri.org/IPlanificacionWCF/GetHistorialCambiosResponse")]
        GS.SISGEGS.DM.GS_GetHistorialCambiosResult[] GetHistorialCambios(int idEmpresa, int codigoUsuario, int id_Detalle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/GetHistorialCambios", ReplyAction="http://tempuri.org/IPlanificacionWCF/GetHistorialCambiosResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.GS_GetHistorialCambiosResult[]> GetHistorialCambiosAsync(int idEmpresa, int codigoUsuario, int id_Detalle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/Obtener_MetaPresupuesto", ReplyAction="http://tempuri.org/IPlanificacionWCF/Obtener_MetaPresupuestoResponse")]
        GS.SISGEGS.DM.USP_Sel_MetaPresupuestoResult[] Obtener_MetaPresupuesto(int idEmpresa, int codigoUsuario, System.DateTime fechainicial, System.DateTime fechafinal, string id_vendedor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/Obtener_MetaPresupuesto", ReplyAction="http://tempuri.org/IPlanificacionWCF/Obtener_MetaPresupuestoResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.USP_Sel_MetaPresupuestoResult[]> Obtener_MetaPresupuestoAsync(int idEmpresa, int codigoUsuario, System.DateTime fechainicial, System.DateTime fechafinal, string id_vendedor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/Registrar_MetaPresupuesto", ReplyAction="http://tempuri.org/IPlanificacionWCF/Registrar_MetaPresupuestoResponse")]
        void Registrar_MetaPresupuesto(int idEmpresa, int codigoUsuario, int anno, int mes, string id_vendedor, int id_zona, System.DateTime fecha, bool aprobado, string pcregistro, GS.SISGEGS.DM.USP_Sel_MetaPresupuestoDetResult[] lstdetalle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/Registrar_MetaPresupuesto", ReplyAction="http://tempuri.org/IPlanificacionWCF/Registrar_MetaPresupuestoResponse")]
        System.Threading.Tasks.Task Registrar_MetaPresupuestoAsync(int idEmpresa, int codigoUsuario, int anno, int mes, string id_vendedor, int id_zona, System.DateTime fecha, bool aprobado, string pcregistro, GS.SISGEGS.DM.USP_Sel_MetaPresupuestoDetResult[] lstdetalle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/Obtener_MetaPresupuestoCabDet", ReplyAction="http://tempuri.org/IPlanificacionWCF/Obtener_MetaPresupuestoCabDetResponse")]
        GS.SISGEGS.Web.PlanificacionWCF.Obtener_MetaPresupuestoCabDetResponse Obtener_MetaPresupuestoCabDet(GS.SISGEGS.Web.PlanificacionWCF.Obtener_MetaPresupuestoCabDetRequest request);
        
        // CODEGEN: Generando contrato de mensaje, ya que la operación tiene múltiples valores de devolución.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/Obtener_MetaPresupuestoCabDet", ReplyAction="http://tempuri.org/IPlanificacionWCF/Obtener_MetaPresupuestoCabDetResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.Web.PlanificacionWCF.Obtener_MetaPresupuestoCabDetResponse> Obtener_MetaPresupuestoCabDetAsync(GS.SISGEGS.Web.PlanificacionWCF.Obtener_MetaPresupuestoCabDetRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/Eliminar_MetaPresupuesto", ReplyAction="http://tempuri.org/IPlanificacionWCF/Eliminar_MetaPresupuestoResponse")]
        void Eliminar_MetaPresupuesto(int idEmpresa, int codigoUsuario, int anno, int mes, string id_vendedor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/Eliminar_MetaPresupuesto", ReplyAction="http://tempuri.org/IPlanificacionWCF/Eliminar_MetaPresupuestoResponse")]
        System.Threading.Tasks.Task Eliminar_MetaPresupuestoAsync(int idEmpresa, int codigoUsuario, int anno, int mes, string id_vendedor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/Aprobar_MetaPresupuesto", ReplyAction="http://tempuri.org/IPlanificacionWCF/Aprobar_MetaPresupuestoResponse")]
        void Aprobar_MetaPresupuesto(int idEmpresa, int codigoUsuario, int anno, int mes, string id_vendedor, bool aprobado, string pcModifica);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/Aprobar_MetaPresupuesto", ReplyAction="http://tempuri.org/IPlanificacionWCF/Aprobar_MetaPresupuestoResponse")]
        System.Threading.Tasks.Task Aprobar_MetaPresupuestoAsync(int idEmpresa, int codigoUsuario, int anno, int mes, string id_vendedor, bool aprobado, string pcModifica);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/Obtener_TipoCliente", ReplyAction="http://tempuri.org/IPlanificacionWCF/Obtener_TipoClienteResponse")]
        GS.SISGEGS.DM.USP_Sel_TipoClienteResult Obtener_TipoCliente(int idEmpresa, int codigoUsuario, string id_cliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/Obtener_TipoCliente", ReplyAction="http://tempuri.org/IPlanificacionWCF/Obtener_TipoClienteResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.USP_Sel_TipoClienteResult> Obtener_TipoClienteAsync(int idEmpresa, int codigoUsuario, string id_cliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/Registrar_MetaPresupuestoPromotor", ReplyAction="http://tempuri.org/IPlanificacionWCF/Registrar_MetaPresupuestoPromotorResponse")]
        void Registrar_MetaPresupuestoPromotor(int idEmpresa, int codigoUsuario, int anno, int mes, string id_vendedor, string id_cliente, string id_promotor, decimal total, bool aprobado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/Registrar_MetaPresupuestoPromotor", ReplyAction="http://tempuri.org/IPlanificacionWCF/Registrar_MetaPresupuestoPromotorResponse")]
        System.Threading.Tasks.Task Registrar_MetaPresupuestoPromotorAsync(int idEmpresa, int codigoUsuario, int anno, int mes, string id_vendedor, string id_cliente, string id_promotor, decimal total, bool aprobado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/Obtener_MetaPresupuestoPromotor", ReplyAction="http://tempuri.org/IPlanificacionWCF/Obtener_MetaPresupuestoPromotorResponse")]
        GS.SISGEGS.DM.USP_Sel_MetaPresupuestoPromotorResult[] Obtener_MetaPresupuestoPromotor(int idEmpresa, int codigoUsuario, int anno, int mes, string id_vendedor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/Obtener_MetaPresupuestoPromotor", ReplyAction="http://tempuri.org/IPlanificacionWCF/Obtener_MetaPresupuestoPromotorResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.USP_Sel_MetaPresupuestoPromotorResult[]> Obtener_MetaPresupuestoPromotorAsync(int idEmpresa, int codigoUsuario, int anno, int mes, string id_vendedor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/Obtener_PresupuestoPendiente", ReplyAction="http://tempuri.org/IPlanificacionWCF/Obtener_PresupuestoPendienteResponse")]
        GS.SISGEGS.DM.USP_SEL_MetaPresupuestoPendienteResult[] Obtener_PresupuestoPendiente(int idEmpresa, int codigoUsuario, int anno, int mes, string id_vendedor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/Obtener_PresupuestoPendiente", ReplyAction="http://tempuri.org/IPlanificacionWCF/Obtener_PresupuestoPendienteResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.USP_SEL_MetaPresupuestoPendienteResult[]> Obtener_PresupuestoPendienteAsync(int idEmpresa, int codigoUsuario, int anno, int mes, string id_vendedor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/Obtener_PromotoresxVendedor", ReplyAction="http://tempuri.org/IPlanificacionWCF/Obtener_PromotoresxVendedorResponse")]
        GS.SISGEGS.DM.USP_Sel_PromotoresxVendedorResult[] Obtener_PromotoresxVendedor(int idEmpresa, int codigoUsuario, string id_vendedor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/Obtener_PromotoresxVendedor", ReplyAction="http://tempuri.org/IPlanificacionWCF/Obtener_PromotoresxVendedorResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.USP_Sel_PromotoresxVendedorResult[]> Obtener_PromotoresxVendedorAsync(int idEmpresa, int codigoUsuario, string id_vendedor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/Eliminar_MetaPresupuestoPromotor", ReplyAction="http://tempuri.org/IPlanificacionWCF/Eliminar_MetaPresupuestoPromotorResponse")]
        void Eliminar_MetaPresupuestoPromotor(int idEmpresa, int codigoUsuario, int anno, int mes, string id_vendedor, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/Eliminar_MetaPresupuestoPromotor", ReplyAction="http://tempuri.org/IPlanificacionWCF/Eliminar_MetaPresupuestoPromotorResponse")]
        System.Threading.Tasks.Task Eliminar_MetaPresupuestoPromotorAsync(int idEmpresa, int codigoUsuario, int anno, int mes, string id_vendedor, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/Obtener_PresupuestoResumen", ReplyAction="http://tempuri.org/IPlanificacionWCF/Obtener_PresupuestoResumenResponse")]
        GS.SISGEGS.DM.USP_SEL_VENTA_POR_VENDEDOR2[] Obtener_PresupuestoResumen(int idEmpresa, int codigoUsuario, System.DateTime fechaInicial, System.DateTime fechaFinal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanificacionWCF/Obtener_PresupuestoResumen", ReplyAction="http://tempuri.org/IPlanificacionWCF/Obtener_PresupuestoResumenResponse")]
        System.Threading.Tasks.Task<GS.SISGEGS.DM.USP_SEL_VENTA_POR_VENDEDOR2[]> Obtener_PresupuestoResumenAsync(int idEmpresa, int codigoUsuario, System.DateTime fechaInicial, System.DateTime fechaFinal);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Obtener_MetaPresupuestoCabDet", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Obtener_MetaPresupuestoCabDetRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int idEmpresa;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int codigoUsuario;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int anno;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int mes;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string id_vendedor;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public GS.SISGEGS.DM.USP_Sel_MetaPresupuestoCabResult eMetaPreCab;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public GS.SISGEGS.DM.USP_Sel_MetaPresupuestoDetResult[] lstMetaPreDet;
        
        public Obtener_MetaPresupuestoCabDetRequest() {
        }
        
        public Obtener_MetaPresupuestoCabDetRequest(int idEmpresa, int codigoUsuario, int anno, int mes, string id_vendedor, GS.SISGEGS.DM.USP_Sel_MetaPresupuestoCabResult eMetaPreCab, GS.SISGEGS.DM.USP_Sel_MetaPresupuestoDetResult[] lstMetaPreDet) {
            this.idEmpresa = idEmpresa;
            this.codigoUsuario = codigoUsuario;
            this.anno = anno;
            this.mes = mes;
            this.id_vendedor = id_vendedor;
            this.eMetaPreCab = eMetaPreCab;
            this.lstMetaPreDet = lstMetaPreDet;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Obtener_MetaPresupuestoCabDetResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Obtener_MetaPresupuestoCabDetResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public GS.SISGEGS.DM.USP_Sel_MetaPresupuestoCabResult eMetaPreCab;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public GS.SISGEGS.DM.USP_Sel_MetaPresupuestoDetResult[] lstMetaPreDet;
        
        public Obtener_MetaPresupuestoCabDetResponse() {
        }
        
        public Obtener_MetaPresupuestoCabDetResponse(GS.SISGEGS.DM.USP_Sel_MetaPresupuestoCabResult eMetaPreCab, GS.SISGEGS.DM.USP_Sel_MetaPresupuestoDetResult[] lstMetaPreDet) {
            this.eMetaPreCab = eMetaPreCab;
            this.lstMetaPreDet = lstMetaPreDet;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPlanificacionWCFChannel : GS.SISGEGS.Web.PlanificacionWCF.IPlanificacionWCF, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PlanificacionWCFClient : System.ServiceModel.ClientBase<GS.SISGEGS.Web.PlanificacionWCF.IPlanificacionWCF>, GS.SISGEGS.Web.PlanificacionWCF.IPlanificacionWCF {
        
        public PlanificacionWCFClient() {
        }
        
        public PlanificacionWCFClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PlanificacionWCFClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlanificacionWCFClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlanificacionWCFClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public GS.SISGEGS.DM.GS_GetAllModulosResult[] Perfil_Listar(int idEmpresa, int codigoUsuario) {
            return base.Channel.Perfil_Listar(idEmpresa, codigoUsuario);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.GS_GetAllModulosResult[]> Perfil_ListarAsync(int idEmpresa, int codigoUsuario) {
            return base.Channel.Perfil_ListarAsync(idEmpresa, codigoUsuario);
        }
        
        public void Modulos_Actualizar(int idEmpresa, int codigoUsuario, int id_Modulo, string detalle, string id_Agenda, int id_Estado, string usuarioModificacion) {
            base.Channel.Modulos_Actualizar(idEmpresa, codigoUsuario, id_Modulo, detalle, id_Agenda, id_Estado, usuarioModificacion);
        }
        
        public System.Threading.Tasks.Task Modulos_ActualizarAsync(int idEmpresa, int codigoUsuario, int id_Modulo, string detalle, string id_Agenda, int id_Estado, string usuarioModificacion) {
            return base.Channel.Modulos_ActualizarAsync(idEmpresa, codigoUsuario, id_Modulo, detalle, id_Agenda, id_Estado, usuarioModificacion);
        }
        
        public GS.SISGEGS.DM.GS_GetPlanificacionByPeriodoResult[] GetPlanificacionByPeriodo(int idEmpresa, int codigoUsuario, string periodo) {
            return base.Channel.GetPlanificacionByPeriodo(idEmpresa, codigoUsuario, periodo);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.GS_GetPlanificacionByPeriodoResult[]> GetPlanificacionByPeriodoAsync(int idEmpresa, int codigoUsuario, string periodo) {
            return base.Channel.GetPlanificacionByPeriodoAsync(idEmpresa, codigoUsuario, periodo);
        }
        
        public GS.SISGEGS.DM.GS_GetPlanificacionDetalleByIdPlanResult[] GetPlanificacionDetalleByIdPlan(int idEmpresa, int codigoUsuario, string idPlanificacion) {
            return base.Channel.GetPlanificacionDetalleByIdPlan(idEmpresa, codigoUsuario, idPlanificacion);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.GS_GetPlanificacionDetalleByIdPlanResult[]> GetPlanificacionDetalleByIdPlanAsync(int idEmpresa, int codigoUsuario, string idPlanificacion) {
            return base.Channel.GetPlanificacionDetalleByIdPlanAsync(idEmpresa, codigoUsuario, idPlanificacion);
        }
        
        public GS.SISGEGS.DM.GS_GetPlanDetalleToInsertResult[] GetPlanDetalleToInsert(int idEmpresa, int codigoUsuario) {
            return base.Channel.GetPlanDetalleToInsert(idEmpresa, codigoUsuario);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.GS_GetPlanDetalleToInsertResult[]> GetPlanDetalleToInsertAsync(int idEmpresa, int codigoUsuario) {
            return base.Channel.GetPlanDetalleToInsertAsync(idEmpresa, codigoUsuario);
        }
        
        public GS.SISGEGS.DM.GS_GetPlanDetalleToEditResult[] GetPlanDetalleToEdit(int idEmpresa, int codigoUsuario, string idPlanificacion) {
            return base.Channel.GetPlanDetalleToEdit(idEmpresa, codigoUsuario, idPlanificacion);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.GS_GetPlanDetalleToEditResult[]> GetPlanDetalleToEditAsync(int idEmpresa, int codigoUsuario, string idPlanificacion) {
            return base.Channel.GetPlanDetalleToEditAsync(idEmpresa, codigoUsuario, idPlanificacion);
        }
        
        public int PlanificacionCabecera_Insertar(int idEmpresa, int codigoUsuario, string periodo, System.DateTime fechaInicio, System.DateTime fechaFin, string usuarioCreacion) {
            return base.Channel.PlanificacionCabecera_Insertar(idEmpresa, codigoUsuario, periodo, fechaInicio, fechaFin, usuarioCreacion);
        }
        
        public System.Threading.Tasks.Task<int> PlanificacionCabecera_InsertarAsync(int idEmpresa, int codigoUsuario, string periodo, System.DateTime fechaInicio, System.DateTime fechaFin, string usuarioCreacion) {
            return base.Channel.PlanificacionCabecera_InsertarAsync(idEmpresa, codigoUsuario, periodo, fechaInicio, fechaFin, usuarioCreacion);
        }
        
        public void PlanificacionCabecera_Update(int idEmpresa, int codigoUsuario, int idPlanificacion, System.DateTime fechaInicio, System.DateTime fechaFin, string usuarioCreacion) {
            base.Channel.PlanificacionCabecera_Update(idEmpresa, codigoUsuario, idPlanificacion, fechaInicio, fechaFin, usuarioCreacion);
        }
        
        public System.Threading.Tasks.Task PlanificacionCabecera_UpdateAsync(int idEmpresa, int codigoUsuario, int idPlanificacion, System.DateTime fechaInicio, System.DateTime fechaFin, string usuarioCreacion) {
            return base.Channel.PlanificacionCabecera_UpdateAsync(idEmpresa, codigoUsuario, idPlanificacion, fechaInicio, fechaFin, usuarioCreacion);
        }
        
        public int PlanificacionDetalle_Insertar(int idEmpresa, int codigoUsuario, int id_Modulo, int idPlanificacion, System.DateTime fechaCierre, string detalle, string observacion, int estado, string usuarioCreacion) {
            return base.Channel.PlanificacionDetalle_Insertar(idEmpresa, codigoUsuario, id_Modulo, idPlanificacion, fechaCierre, detalle, observacion, estado, usuarioCreacion);
        }
        
        public System.Threading.Tasks.Task<int> PlanificacionDetalle_InsertarAsync(int idEmpresa, int codigoUsuario, int id_Modulo, int idPlanificacion, System.DateTime fechaCierre, string detalle, string observacion, int estado, string usuarioCreacion) {
            return base.Channel.PlanificacionDetalle_InsertarAsync(idEmpresa, codigoUsuario, id_Modulo, idPlanificacion, fechaCierre, detalle, observacion, estado, usuarioCreacion);
        }
        
        public GS.SISGEGS.DM.GS_GetAgendaListaResult[] GetAgendaLista(int idEmpresa, int codigoUsuario) {
            return base.Channel.GetAgendaLista(idEmpresa, codigoUsuario);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.GS_GetAgendaListaResult[]> GetAgendaListaAsync(int idEmpresa, int codigoUsuario) {
            return base.Channel.GetAgendaListaAsync(idEmpresa, codigoUsuario);
        }
        
        public void PlanificacionHistorial_Insertar(int idEmpresa, int codigoUsuario, int id_detalle, int id_Modulo, string id_Agenda, string detalle, string observacion, System.DateTime fechaCierre, string usuarioModificacion) {
            base.Channel.PlanificacionHistorial_Insertar(idEmpresa, codigoUsuario, id_detalle, id_Modulo, id_Agenda, detalle, observacion, fechaCierre, usuarioModificacion);
        }
        
        public System.Threading.Tasks.Task PlanificacionHistorial_InsertarAsync(int idEmpresa, int codigoUsuario, int id_detalle, int id_Modulo, string id_Agenda, string detalle, string observacion, System.DateTime fechaCierre, string usuarioModificacion) {
            return base.Channel.PlanificacionHistorial_InsertarAsync(idEmpresa, codigoUsuario, id_detalle, id_Modulo, id_Agenda, detalle, observacion, fechaCierre, usuarioModificacion);
        }
        
        public void PlanificacionDetalle_Actualizar(int idEmpresa, int codigoUsuario, int id_detalle, string detalle, string observacion, System.DateTime fechaCierre, string usuarioModificacion) {
            base.Channel.PlanificacionDetalle_Actualizar(idEmpresa, codigoUsuario, id_detalle, detalle, observacion, fechaCierre, usuarioModificacion);
        }
        
        public System.Threading.Tasks.Task PlanificacionDetalle_ActualizarAsync(int idEmpresa, int codigoUsuario, int id_detalle, string detalle, string observacion, System.DateTime fechaCierre, string usuarioModificacion) {
            return base.Channel.PlanificacionDetalle_ActualizarAsync(idEmpresa, codigoUsuario, id_detalle, detalle, observacion, fechaCierre, usuarioModificacion);
        }
        
        public GS.SISGEGS.DM.GS_GetHistorialCambiosResult[] GetHistorialCambios(int idEmpresa, int codigoUsuario, int id_Detalle) {
            return base.Channel.GetHistorialCambios(idEmpresa, codigoUsuario, id_Detalle);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.GS_GetHistorialCambiosResult[]> GetHistorialCambiosAsync(int idEmpresa, int codigoUsuario, int id_Detalle) {
            return base.Channel.GetHistorialCambiosAsync(idEmpresa, codigoUsuario, id_Detalle);
        }
        
        public GS.SISGEGS.DM.USP_Sel_MetaPresupuestoResult[] Obtener_MetaPresupuesto(int idEmpresa, int codigoUsuario, System.DateTime fechainicial, System.DateTime fechafinal, string id_vendedor) {
            return base.Channel.Obtener_MetaPresupuesto(idEmpresa, codigoUsuario, fechainicial, fechafinal, id_vendedor);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.USP_Sel_MetaPresupuestoResult[]> Obtener_MetaPresupuestoAsync(int idEmpresa, int codigoUsuario, System.DateTime fechainicial, System.DateTime fechafinal, string id_vendedor) {
            return base.Channel.Obtener_MetaPresupuestoAsync(idEmpresa, codigoUsuario, fechainicial, fechafinal, id_vendedor);
        }
        
        public void Registrar_MetaPresupuesto(int idEmpresa, int codigoUsuario, int anno, int mes, string id_vendedor, int id_zona, System.DateTime fecha, bool aprobado, string pcregistro, GS.SISGEGS.DM.USP_Sel_MetaPresupuestoDetResult[] lstdetalle) {
            base.Channel.Registrar_MetaPresupuesto(idEmpresa, codigoUsuario, anno, mes, id_vendedor, id_zona, fecha, aprobado, pcregistro, lstdetalle);
        }
        
        public System.Threading.Tasks.Task Registrar_MetaPresupuestoAsync(int idEmpresa, int codigoUsuario, int anno, int mes, string id_vendedor, int id_zona, System.DateTime fecha, bool aprobado, string pcregistro, GS.SISGEGS.DM.USP_Sel_MetaPresupuestoDetResult[] lstdetalle) {
            return base.Channel.Registrar_MetaPresupuestoAsync(idEmpresa, codigoUsuario, anno, mes, id_vendedor, id_zona, fecha, aprobado, pcregistro, lstdetalle);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GS.SISGEGS.Web.PlanificacionWCF.Obtener_MetaPresupuestoCabDetResponse GS.SISGEGS.Web.PlanificacionWCF.IPlanificacionWCF.Obtener_MetaPresupuestoCabDet(GS.SISGEGS.Web.PlanificacionWCF.Obtener_MetaPresupuestoCabDetRequest request) {
            return base.Channel.Obtener_MetaPresupuestoCabDet(request);
        }
        
        public void Obtener_MetaPresupuestoCabDet(int idEmpresa, int codigoUsuario, int anno, int mes, string id_vendedor, ref GS.SISGEGS.DM.USP_Sel_MetaPresupuestoCabResult eMetaPreCab, ref GS.SISGEGS.DM.USP_Sel_MetaPresupuestoDetResult[] lstMetaPreDet) {
            GS.SISGEGS.Web.PlanificacionWCF.Obtener_MetaPresupuestoCabDetRequest inValue = new GS.SISGEGS.Web.PlanificacionWCF.Obtener_MetaPresupuestoCabDetRequest();
            inValue.idEmpresa = idEmpresa;
            inValue.codigoUsuario = codigoUsuario;
            inValue.anno = anno;
            inValue.mes = mes;
            inValue.id_vendedor = id_vendedor;
            inValue.eMetaPreCab = eMetaPreCab;
            inValue.lstMetaPreDet = lstMetaPreDet;
            GS.SISGEGS.Web.PlanificacionWCF.Obtener_MetaPresupuestoCabDetResponse retVal = ((GS.SISGEGS.Web.PlanificacionWCF.IPlanificacionWCF)(this)).Obtener_MetaPresupuestoCabDet(inValue);
            eMetaPreCab = retVal.eMetaPreCab;
            lstMetaPreDet = retVal.lstMetaPreDet;
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.Web.PlanificacionWCF.Obtener_MetaPresupuestoCabDetResponse> Obtener_MetaPresupuestoCabDetAsync(GS.SISGEGS.Web.PlanificacionWCF.Obtener_MetaPresupuestoCabDetRequest request) {
            return base.Channel.Obtener_MetaPresupuestoCabDetAsync(request);
        }
        
        public void Eliminar_MetaPresupuesto(int idEmpresa, int codigoUsuario, int anno, int mes, string id_vendedor) {
            base.Channel.Eliminar_MetaPresupuesto(idEmpresa, codigoUsuario, anno, mes, id_vendedor);
        }
        
        public System.Threading.Tasks.Task Eliminar_MetaPresupuestoAsync(int idEmpresa, int codigoUsuario, int anno, int mes, string id_vendedor) {
            return base.Channel.Eliminar_MetaPresupuestoAsync(idEmpresa, codigoUsuario, anno, mes, id_vendedor);
        }
        
        public void Aprobar_MetaPresupuesto(int idEmpresa, int codigoUsuario, int anno, int mes, string id_vendedor, bool aprobado, string pcModifica) {
            base.Channel.Aprobar_MetaPresupuesto(idEmpresa, codigoUsuario, anno, mes, id_vendedor, aprobado, pcModifica);
        }
        
        public System.Threading.Tasks.Task Aprobar_MetaPresupuestoAsync(int idEmpresa, int codigoUsuario, int anno, int mes, string id_vendedor, bool aprobado, string pcModifica) {
            return base.Channel.Aprobar_MetaPresupuestoAsync(idEmpresa, codigoUsuario, anno, mes, id_vendedor, aprobado, pcModifica);
        }
        
        public GS.SISGEGS.DM.USP_Sel_TipoClienteResult Obtener_TipoCliente(int idEmpresa, int codigoUsuario, string id_cliente) {
            return base.Channel.Obtener_TipoCliente(idEmpresa, codigoUsuario, id_cliente);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.USP_Sel_TipoClienteResult> Obtener_TipoClienteAsync(int idEmpresa, int codigoUsuario, string id_cliente) {
            return base.Channel.Obtener_TipoClienteAsync(idEmpresa, codigoUsuario, id_cliente);
        }
        
        public void Registrar_MetaPresupuestoPromotor(int idEmpresa, int codigoUsuario, int anno, int mes, string id_vendedor, string id_cliente, string id_promotor, decimal total, bool aprobado) {
            base.Channel.Registrar_MetaPresupuestoPromotor(idEmpresa, codigoUsuario, anno, mes, id_vendedor, id_cliente, id_promotor, total, aprobado);
        }
        
        public System.Threading.Tasks.Task Registrar_MetaPresupuestoPromotorAsync(int idEmpresa, int codigoUsuario, int anno, int mes, string id_vendedor, string id_cliente, string id_promotor, decimal total, bool aprobado) {
            return base.Channel.Registrar_MetaPresupuestoPromotorAsync(idEmpresa, codigoUsuario, anno, mes, id_vendedor, id_cliente, id_promotor, total, aprobado);
        }
        
        public GS.SISGEGS.DM.USP_Sel_MetaPresupuestoPromotorResult[] Obtener_MetaPresupuestoPromotor(int idEmpresa, int codigoUsuario, int anno, int mes, string id_vendedor) {
            return base.Channel.Obtener_MetaPresupuestoPromotor(idEmpresa, codigoUsuario, anno, mes, id_vendedor);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.USP_Sel_MetaPresupuestoPromotorResult[]> Obtener_MetaPresupuestoPromotorAsync(int idEmpresa, int codigoUsuario, int anno, int mes, string id_vendedor) {
            return base.Channel.Obtener_MetaPresupuestoPromotorAsync(idEmpresa, codigoUsuario, anno, mes, id_vendedor);
        }
        
        public GS.SISGEGS.DM.USP_SEL_MetaPresupuestoPendienteResult[] Obtener_PresupuestoPendiente(int idEmpresa, int codigoUsuario, int anno, int mes, string id_vendedor) {
            return base.Channel.Obtener_PresupuestoPendiente(idEmpresa, codigoUsuario, anno, mes, id_vendedor);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.USP_SEL_MetaPresupuestoPendienteResult[]> Obtener_PresupuestoPendienteAsync(int idEmpresa, int codigoUsuario, int anno, int mes, string id_vendedor) {
            return base.Channel.Obtener_PresupuestoPendienteAsync(idEmpresa, codigoUsuario, anno, mes, id_vendedor);
        }
        
        public GS.SISGEGS.DM.USP_Sel_PromotoresxVendedorResult[] Obtener_PromotoresxVendedor(int idEmpresa, int codigoUsuario, string id_vendedor) {
            return base.Channel.Obtener_PromotoresxVendedor(idEmpresa, codigoUsuario, id_vendedor);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.USP_Sel_PromotoresxVendedorResult[]> Obtener_PromotoresxVendedorAsync(int idEmpresa, int codigoUsuario, string id_vendedor) {
            return base.Channel.Obtener_PromotoresxVendedorAsync(idEmpresa, codigoUsuario, id_vendedor);
        }
        
        public void Eliminar_MetaPresupuestoPromotor(int idEmpresa, int codigoUsuario, int anno, int mes, string id_vendedor, int id) {
            base.Channel.Eliminar_MetaPresupuestoPromotor(idEmpresa, codigoUsuario, anno, mes, id_vendedor, id);
        }
        
        public System.Threading.Tasks.Task Eliminar_MetaPresupuestoPromotorAsync(int idEmpresa, int codigoUsuario, int anno, int mes, string id_vendedor, int id) {
            return base.Channel.Eliminar_MetaPresupuestoPromotorAsync(idEmpresa, codigoUsuario, anno, mes, id_vendedor, id);
        }
        
        public GS.SISGEGS.DM.USP_SEL_VENTA_POR_VENDEDOR2[] Obtener_PresupuestoResumen(int idEmpresa, int codigoUsuario, System.DateTime fechaInicial, System.DateTime fechaFinal) {
            return base.Channel.Obtener_PresupuestoResumen(idEmpresa, codigoUsuario, fechaInicial, fechaFinal);
        }
        
        public System.Threading.Tasks.Task<GS.SISGEGS.DM.USP_SEL_VENTA_POR_VENDEDOR2[]> Obtener_PresupuestoResumenAsync(int idEmpresa, int codigoUsuario, System.DateTime fechaInicial, System.DateTime fechaFinal) {
            return base.Channel.Obtener_PresupuestoResumenAsync(idEmpresa, codigoUsuario, fechaInicial, fechaFinal);
        }
    }
}
